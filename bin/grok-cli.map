{"version":3,"file":"grok-cli","sources":["../src/grok.ts","../src/terminal.ts","../src/grok-cli.ts"],"sourcesContent":["// import {TypeDoc} from 'typedoc';\nconst TypeDoc = require('typedoc');\n\nconst highlightJs = require('highlight.js'); // https://highlightjs.org/\nconst path = require('path');\n\nconst markdownIt = require('markdown-it');\nconst markdown = new markdownIt({\n    // See https://markdown-it.github.io/markdown-it/\n    html: true,\n    typographer: true,\n    highlight: function (str, lang) {\n        if ((lang ?? 'typescript') && highlightJs.getLanguage(lang)) {\n            try {\n                return highlightJs.highlight(lang, str).value;\n            } catch (err) {\n                console.log(err);\n            }\n        }\n\n        return ''; // use external default escaping\n    },\n});\n\ninterface Options {\n    outFile?: string;\n    verbose?: boolean;\n\n    documentTemplate?: string;\n\n    /** If true, the documentation is output in separate files.\n     * Otherwise, it's combined in a single file\n     */\n    splitOutput?: boolean;\n\n    apiName?: string;\n}\n\ntype Reflection = { [key: string]: any };\n\nfunction span(\n    value: string,\n    className:\n        | 'keyword'\n        | 'modifier'\n        | 'modifier-tag'\n        | 'red modifier-tag'\n        | 'orange modifier-tag'\n        | 'tag-name'\n        | 'stringLiteral'\n        | 'deprecated'\n        | ''\n) {\n    if (!className) return value;\n    return '<span class=\"' + className + '\">' + value + '</span>';\n}\n\nfunction punct(value: string) {\n    return '<span class=\"punct\">' + value + '</span>';\n}\n\n// A \"reflection\" is some type information.\n// In some cases, some types reference other type info by reference.\n// This function locates these references by traversing the JSON\n// data structure ('from')\n\nfunction getReflectionByID(id: number, root = gNodes) {\n    // A node with a given id can either be the actual node\n    // or a **reference** to this node. Ignore references.\n    if (root.type !== 'reference' && root.id === id) return root;\n    let result;\n    root.children &&\n        root.children.some((x) => {\n            result = getReflectionByID(id, x);\n            return result !== undefined;\n        });\n    return result;\n}\n\nfunction getReflectionsByName(name: string, root?) {\n    if (!root) root = gNodes;\n    let result = [];\n    if (root.name === name) result.push(root);\n    if (root.children) {\n        root.children.forEach((x) => {\n            result = [...result, ...getReflectionsByName(name, x)];\n        });\n    }\n    return result;\n}\n\n/**\n * While a node ID is unique, names might not be.\n * Return all the matching nodes.\n */\nfunction getReflectionByName(name: string, root?, kind?): Reflection {\n    let candidates = [];\n    candidates = getReflectionsByName(name, root);\n    if (candidates.length > 0) {\n        candidates.sort((a, b) => b.kind - a.kind);\n        if (typeof kind === 'number') {\n            candidates = candidates.filter((x) => (x.kind & kind) !== 0);\n        } else if (kind === 'static') {\n            candidates = candidates.filter(\n                (x) => x.kind === 2048 && hasFlag(x, 'isStatic')\n            );\n        } else if (typeof kind === 'string') {\n            const numKind = NUMERIC_KIND[kind];\n            candidates = candidates.filter((x) => (x.kind & numKind) !== 0);\n        }\n        if (candidates.length > 0) {\n            return candidates[0];\n        }\n    }\n    return null;\n}\n\nconst NUMERIC_KIND = {\n    namespace: 2,\n    enum: 4,\n    variable: 32,\n    function: 64,\n    class: 128,\n    interface: 256,\n    instance: 1024 | 2048 | 262144, // property, method or getter/setter\n    static: 1024 | 2048, // property or method\n    type: 4194304,\n};\n\nfunction getNameSelector(segment: string) {\n    const m = segment.match(/^\\(([^\\:]+)(\\:([^\\)]+))?\\)$/);\n    if (m) {\n        return [m[1], m[3]];\n    }\n    return [segment, undefined];\n}\n\n/*\n * Given a link, e.g. \"(Animal:class).(run:instance)\" or \"walk\"\n * return a matching reflection\n *\n * According to typedoc (https://typedoc.org/guides/doccomments/):\n * Links are resolved by looking at child reflections, then at adjacent\n * reflections, then at parent reflections. If a name contains a dot (.),\n * each part of the name will be treated as the name of a reflection.\n * For example, to link to the member property of Foo, you can use\n * {@link Foo.member}.\n */\n\nfunction getReflectionByLink(link: string, root?) {\n    const segments = link.split('.');\n    if (segments.length === 1) {\n        // No path: look at children, then siblings, then parent, then global\n        const [name, kind] = getNameSelector(segments[0]);\n        return (\n            getReflectionByName(name, root, kind) ||\n            getReflectionByName(name, getParent(root), kind) ||\n            getReflectionByName(name, null, kind)\n        );\n    }\n\n    const lastSegment = segments.pop();\n    let node = null;\n    for (const segment of segments) {\n        // Find the next path segment\n        const [name, kind] = getNameSelector(segment);\n        node = getReflectionByName(name, node, kind);\n    }\n    return getReflectionByLink(lastSegment, node);\n}\n\n/**\n * Return an array of ancestor nodes.\n * result[0] is the node\n * result[1] is the parent, etc..\n */\nfunction getAncestors(node, root = gNodes) {\n    if (!node) return null;\n    if (node.id === root.id) return [root];\n    if (root.children) {\n        for (const child of root.children) {\n            let ancestors = getAncestors(node, child);\n            if (ancestors) {\n                return [...ancestors, root];\n            }\n        }\n    }\n    return null;\n}\n\nfunction getParent(node) {\n    let ancestors = getAncestors(node);\n    if (ancestors) return ancestors[1];\n    return null;\n}\n\n/**\n * Return all the children matching the specified list of IDs\n */\nfunction getChildrenByID(json, children) {\n    return children.map(\n        (x) => json.children.filter((child) => child.id === x)[0]\n    );\n}\n\nfunction getName(node) {\n    if (node.kind === 1) {\n        return getModuleName(node);\n    }\n    return node.name;\n}\n\nfunction everyStringLiteral(nodes) {\n    return nodes.every((x) => x.type === 'stringLiteral');\n}\n\nfunction sortOtherCategoryAtEnd(categories) {\n    return categories.sort((a, b) => {\n        if (a.title === b.title) return 0;\n        if (a.title === 'Other') return 1;\n        if (b.title === 'Other') return -1;\n        return a.title < b.title;\n    });\n}\n\nconst KIND_ORDER = {\n    512: 1, // constructor\n\n    64: 2, // function\n    2048: 3, // method\n    262144: 4, // setter/getter (accessor)\n\n    1024: 5, // property\n    32: 6, // variable/properties\n\n    256: 7, // interface\n    128: 8, // class\n\n    4194304: 9, // type alias\n    4: 10, // enum\n};\n\nfunction sortGroups(groups) {\n    return groups.sort((a, b) => {\n        console.assert(KIND_ORDER[b.kind] && KIND_ORDER[a.kind]);\n        return KIND_ORDER[a.kind] === KIND_ORDER[b.kind]\n            ? 0\n            : KIND_ORDER[a.kind] < KIND_ORDER[b.kind]\n            ? -1\n            : +1;\n    });\n}\n\n/**\n * Categories are grouping of related items, for example\n * all methods about a particular topic.\n *\n * In the source file, categories are indicated with a\n * @category tag (a tsdoc standard)\n */\n\nfunction getCategories(node, kind) {\n    let result = [];\n    let children = node.groups && node.groups.filter((x) => x.kind === kind);\n    if (!children || children.length !== 1) {\n        // No groups. Are there topics?\n        if (node.categories) {\n            return sortOtherCategoryAtEnd(node.categories);\n        }\n        return node.children.filter((x) => x.kind === kind);\n    }\n    if (children[0].categories) {\n        result = children[0].categories.map((category) => {\n            return {\n                title: category.title,\n                children: getChildrenByID(node, category.children),\n            };\n        });\n        result = sortOtherCategoryAtEnd(result);\n    } else {\n        // No categories, return all the children of the specified kind\n        result = [\n            {\n                title: '',\n                children: getChildrenByID(node, children[0].children),\n            },\n        ];\n    }\n    return result;\n}\n\n// See https://github.com/microsoft/tsdoc/blob/master/spec/code-snippets/DeclarationReferences.ts\n// This returns a fully qualified (non-ambiguous) permalink to this symbol\n// The \"(:)\" operator uses a \"selector\" after the colon.  It has these properties:\n//\n// - It is used in the absence of a TypeScript name, or to choose between things that have\n//   the same name.\n//\n// - For members of classes, the system-defined selectors are \"instance\" and \"static\"\n//\n// - For members of interfaces and enums, there are no system-defined selectors.\n//\n// - For merged declarations, the system-defined selectors are \"class\", \"enum\", \"function\",\n//   \"interface\", \"namespace\", \"type\", or \"variable\"\n//\n// - Class constructors use a special \"constructor\" selector that applies to the class itself.\n//\n// - Label selectors refer to declarations indicated using the {@label LABEL} tag.  The label\n//   must be all capitals (e.g. \"WITH_NUMBERS\") to avoid conflicts with system selectors.\n//\n// This returns a permalink structure made up of:\n// - anchor: a URL anchor that needs to be encoded and added\n// after a '#' and path to make it a full URL\n// - title: a string to be displayed as the name of the URL.\n\nfunction makePermalink(node) {\n    if (!node || node.kind === 0) {\n        // kind = 0 -> file\n        return { anchor: '', title: '', parent: null };\n    }\n    const parent = getParent(node);\n    if (!parent) {\n        // Some nodes are not in the tree of nodes and are not reachable\n        // For example temporary types that are not named, as in:\n        // `a: {b:T}`: `{b:T}` is an unreachable node\n        return { anchor: node.name || '', title: node.name || '' };\n    }\n    let result;\n    if (node.kind === 512) {\n        // Special syntax for constructors\n        let grandparentPermalink = makePermalink(getParent(parent));\n        if (grandparentPermalink) {\n            result = {\n                anchor:\n                    (grandparentPermalink.anchor\n                        ? grandparentPermalink.anchor + '.'\n                        : '') +\n                    parent.name +\n                    ':constructor',\n                title: 'new ' + parent.name + '()',\n            };\n        } else {\n            result = {\n                anchor: parent.name + ':constructor',\n                title: 'new ' + parent.name + '()',\n            };\n        }\n    } else {\n        const qualifiedSymbol = getQualifiedSymbol(parent, node);\n        const parentPermalink = makePermalink(parent);\n        let nodeName = getName(node);\n        result = parentPermalink\n            ? {\n                  anchor:\n                      (parentPermalink.anchor\n                          ? parentPermalink.anchor + '.'\n                          : '') + qualifiedSymbol,\n                  title: parentPermalink.title + '.' + nodeName,\n              }\n            : {\n                  anchor: qualifiedSymbol,\n                  title: nodeName,\n              };\n    }\n    if (shouldIgnore(node)) {\n        result.anchor = '';\n    }\n    return result;\n}\n\n/**\n * Render a link to an item, inline\n * The permalink is made up of\n * - document: a valid URL\n * - anchor: an unescaped ID\n * - title: a string\n */\nfunction renderPermalink(\n    permalink: {\n        document?: string;\n        anchor: string;\n        title: string;\n    },\n    title?: string\n) {\n    title = title || permalink.title;\n    if (permalink.document && permalink.anchor) {\n        // This is an external reference (with an anchor)\n        return `<a href=\"${permalink.document}#${encodeURIComponent(\n            permalink.anchor\n        )}\">${title}</a>`;\n    } else if (permalink.document) {\n        // This is an external reference (without anchor)\n        return `<a href=\"${permalink.document}}\">${title}</a>`;\n    } else if (permalink.anchor) {\n        // This is a reference to a local item (in this document)\n        return `<a href=\"#${encodeURIComponent(\n            permalink.anchor\n        )}\">${title}</a>`;\n    }\n    return title;\n}\n\n/**\n * Renders the \"anchor\" permalink displayed on hover\n * in the card header.\n */\nfunction renderPermalinkAnchor(permalink) {\n    // This should only be called for items that are in this document,\n    // so the permalink.document should be empty.\n    console.assert(!permalink.document);\n\n    return (\n        '<a class=\"permalink\" href=\"#' +\n        encodeURIComponent(permalink.anchor) +\n        '\" title=\"Permalink\"><span class=\"sr-only\">Permalink</span>' +\n        '<svg><use xlink:href=\"#link\"></use></svg>' +\n        '</a>'\n    );\n}\n\n/**\n * Render a \"table of content\"\n * for example for all the methods or properties in a class.\n *\n * Each item name has a link to its full definition.\n *\n * The items are displayed in a short form without type info.\n *\n * The items are grouped by categories\n *\n * If there are 1 or less, no table is generated (don't need\n * a table with 1 item in it)\n */\nfunction renderIndex(node, title?, categories?, options?) {\n    if (!categories || categories.length === 0) return '';\n    let result = '';\n    if (title) {\n        result += '\\n\\n<h3>';\n        result += '<em>' + getQualifiedName(node) + '</em>';\n        result += `${title}</h3>\\n`;\n    }\n\n    // Don't display the index if there's only one item in it\n    if (categories.length === 1 && categories[0].children.length <= 1) {\n        return result;\n    }\n\n    options = options || { symbolSuffix: '' }; // Could be '()' for functions/methods\n\n    return (\n        result +\n        categories\n            .map((category) => {\n                let r = '';\n                if (category.title) {\n                    r += `\\n\\n<h4>${category.title}</h4>\\n`;\n                }\n                r += '\\n<div class=\"index\"><ul><li>';\n                r += category.children\n                    .map((x) => {\n                        // Sometimes the children can be ID (for 'Types') for example\n                        if (typeof x === 'number') x = getReflectionByID(x);\n                        return renderPermalink(\n                            makePermalink(x),\n                            x.name + options.symbolSuffix\n                        );\n                    })\n                    .filter((x) => !!x)\n                    .join('</li>\\n<li>');\n                r += '</li></ul></div>\\n';\n                return r;\n            })\n            .join('\\n')\n    );\n}\n\n// A flag is usually a typescript keyword modifying an entry,\n// for example 'protected' -> 'isProtected' or 'optional' -> 'isOptional'\nfunction hasFlag(node, flag) {\n    return node && node.flags && node.flags[flag];\n}\n\n// A tag is a JSDOC notation, such as '@param' or '@example'\n// See https://typedoc.org/guides/doccomments/\nfunction getTag(node, tag) {\n    if (node && node.comment && node.comment.tags) {\n        let result = node.comment.tags.filter((x) => x.tag === tag);\n        // It *could* happen, but we're not ready to deal with that...\n        console.assert(result.length <= 1);\n        if (result.length === 1) {\n            return result[0].text || '';\n        }\n    }\n    return '';\n}\n\n/**\n *  Return true if a tag is present (but its content could be empty)\n */\n\nfunction hasTag(node, tag) {\n    return (\n        node &&\n        node.comment &&\n        node.comment.tags &&\n        node.comment.tags.filter((x) => x.tag === tag).length > 0\n    );\n}\n\nfunction renderFlags(node, style = 'block') {\n    if (!node) return '';\n    let result = '';\n    if (node.flags) {\n        if (node.flags.isAbstract) result += span('abstract', 'modifier-tag');\n        if (node.flags.isPrivate) result += span('private', 'modifier-tag');\n        if (node.flags.isProtected) result += span('protected', 'modifier-tag');\n        if (node.flags.isPublic) result += span('public', 'modifier-tag');\n        // The 'exported' flag is low information in a public API. Skip it.\n        // if (json.isExported) result += span('exported', 'modifier-tag');\n        if (node.flags.isExternal) result += span('external', 'modifier-tag');\n        if (node.flags.isStatic) result += span('static', 'modifier-tag');\n    }\n\n    const TAGS: {\n        [modifier: string]: 'red modifier-tag' | 'orange modifier-tag' | '';\n    } = {\n        // command: '', // @command: indicate commands dispatched with .perform()\n        eventproperty: '',\n        override: '',\n        // public: '',  // @public is not a block tag: it gets converted to a flag\n        // private: '',  // @private is not a block tag: it gets converted to a flag\n        // protected: '',  // @protected is not a block tag: it gets converted to a flag\n        readonly: '',\n        sealed: '',\n        virtual: '',\n        deprecated: 'red modifier-tag',\n        // internal: 'red', // Items with a @internal tag are ignored\n        beta: 'orange modifier-tag',\n        alpha: 'orange modifier-tag',\n        experimental: 'orange modifier-tag',\n    };\n    const TAG_NAME = {\n        eventproperty: 'event',\n        readonly: 'read only',\n    };\n    result += Object.keys(TAGS)\n        .map((x) => (hasTag(node, x) ? span(TAG_NAME[x] || x, TAGS[x]) : ''))\n        .join('');\n\n    return result\n        ? style === 'block'\n            ? '<div class=\"flags\">' + result + '</div>\\n'\n            : '<span class=\"flags\">' + result + '</span>\\n'\n        : '';\n}\n\n/**\n * JSDOC tags...\n * See https://github.com/microsoft/tsdoc/blob/master/tsdoc/src/details/StandardTags.ts for the list of supported tags\n */\nfunction renderTag(node, tag, text) {\n    if (!tag || !text) return '';\n    let result = '';\n    text = trimNewline(text.trim()) || '';\n    switch (tag) {\n        case 'method':\n            result +=\n                '<strong>Method:</strong> ' +\n                markdown.render(renderLinkTags(node, text));\n            break;\n        case 'module':\n            result +=\n                '<strong>Module:</strong> ' +\n                markdown.render(renderLinkTags(node, text));\n            break;\n        case 'function':\n            result +=\n                '<strong>Function:</strong> ' +\n                markdown.render(renderLinkTags(node, text));\n            break;\n        case 'example':\n            result +=\n                '\\n<pre><code>' +\n                highlightJs.highlight('typescript', text).value +\n                '</pre></code>\\n';\n            break;\n        case 'typedef':\n        case 'type':\n        case 'property':\n        case 'param':\n        case 'returns':\n            // Those tags are emitted for type definition\n            // but they are redundant...\n            break;\n        case 'privateremarks':\n            // This comment is for internal use only. Do not output it\n            // in the API documentation.\n            break;\n        case 'packagedocumentation':\n            // This tag indicates this is the top-level documentation\n            // We handle it separately, no need to emit it here.\n            break;\n        case 'category':\n            // Categories/topics are handled separately\n            break;\n        case 'global':\n            // Globals are grouped together and indicated separately\n            break;\n        case 'command':\n            // The @command tag indicates that the properties of a class or\n            // interface specify the selectors of a command to be invoked with\n            // the code which is the value of the @command tag. This is handled\n            // separately and should not be displayed as a regular tag.\n            break;\n\n        default:\n            if (text) {\n                const noticeStyle =\n                    {\n                        eventproperty: 'info',\n                        override: 'info',\n                        public: 'info',\n                        readonly: 'info',\n                        sealed: 'info',\n                        virtual: 'info',\n                        alpha: 'warning',\n                        beta: 'warning',\n                        experimental: 'warning',\n                        deprecated: 'danger',\n                        internal: 'danger',\n                    }[tag] || 'info';\n                const tagLabel = { eventproperty: 'event' }[tag] || tag;\n                // Add a notice style\n                result += '<section class=\"notice--' + noticeStyle + '\">\\n';\n                result +=\n                    '<h4>' +\n                    tagLabel +\n                    '</h4>\\n\\n' +\n                    markdown.render(renderLinkTags(node, text));\n                result += '\\n</section>';\n            } else if (\n                !/alpha|beta|deprecated|eventproperty|experimental|internal|override|public|readonly|sealed|virtual/i.test(\n                    tag\n                )\n            ) {\n                result += '<strong>' + tag + '</strong>';\n            } else {\n                // console.log('Unexpected tag ' + tag);\n            }\n    }\n    return result;\n}\n\nfunction escapeYAMLString(str) {\n    return str.replace(/([^\\\\])'/g, \"$1\\\\'\");\n}\n\nfunction trimQuotes(str) {\n    return str.replace(/(^\")|(\"$)/g, '');\n}\n\nfunction trimNewline(str) {\n    return str.replace(/(\\n+)$/g, '');\n}\n\n/**\n * A symbol is for example the name of a type (\"T\") or class (\"C\")\n * or a method (\"f\") or property (\"p\").\n *\n * A qualified symbol adds a \"selector\" that is used to disambiguate\n * the symbol. For example \"f\" could refer either to an instance method\n * of a class, a static method of a class, or a member of an interface.\n *\n * Their respective qualified version would be:\n * \"(f:instance)\", \"(f:static)\" and \"f\"\n *\n * Note this function returns \"full\" qualified symbols:\n * when it's not ambiguous, the selector can be omitted to form\n * a short qualified name, for example if there's only a static\n * method, \"f\" is acceptable. However, the symbols we generate\n * (for anchor links) are always fully qualified, while the\n * ones we interpret (reading from @link, for example), don't\n * have to be.\n *\n */\n\nfunction getQualifiedSymbol(parent, node) {\n    if (node.kind === 0) {\n        // File-level\n        return '';\n    }\n    if (node.kind === 1) {\n        // This is a module\n        console.assert(parent.kind === 0);\n        if (parent.children.length === 1) {\n            // And there is a single module in this file\n            return '';\n        } else {\n            return '(\"' + getModuleName(node) + '\":module)';\n        }\n    }\n    if (node.kind === 2) {\n        // Namespace.\n        // There's a bug in typedeoc:\n        // https://github.com/TypeStrong/typedoc/issues/1284\n        // exported modules are returned as 'namespace' with a stringLiteral value\n        if (/^\"(.*)\"$/.test(node.name)) {\n            return '(\"' + trimQuotes(node.name) + '\":module)';\n        }\n        return '(' + node.name + '\":namespace)';\n    }\n    if (node.type === 'reference') {\n        // If this is a reference, resolve it.\n        // For example in 'Keys<Commands>' 'Keys' is a reference to the\n        // type 'Keys'\n        node = getReflectionByID(node.id);\n    }\n    const symbol = node.name;\n    let selector = {\n        2: 'namespace',\n        4: 'enum',\n        32: 'variable',\n        16: '', // Enum member\n        64: 'function',\n        128: 'class',\n        256: 'interface',\n        1024: '', // property, no selector (unless parent is class, see below)\n        2048: '', // method, handled below\n        4096: 'function', // call signature (functions)\n        262144: 'instance', // get/set\n        4194304: 'type', // 131072? 65535?\n    }[node.kind];\n    console.assert(typeof selector !== 'undefined');\n    if (node.kind === 512) {\n        // Constructor (special syntax)\n        // Note: this code should never be reached,\n        // this case is handled in makePermalink()\n        return ':constructor';\n    }\n    // See https://github.com/microsoft/tsdoc/blob/master/spec/code-snippets/DeclarationReferences.ts\n    // for the list of standard selectors\n    if (parent && parent.kind === 128) {\n        // If the parent is a class, use a 'static' or 'instance'\n        // selector for properties (1024) and methods (2048)\n        if (node.kind === 1024 || node.kind === 2048) {\n            if (node.flags && node.flags.isStatic) {\n                selector = 'static';\n            } else {\n                selector = 'instance';\n            }\n        }\n    } else if (parent && parent.kind === 256) {\n        // There's no selector for members of interfaces\n        selector = '';\n    }\n    const label = getTag(node, 'label');\n    if (label) {\n        // If there's an explicit @label set, use it as a selector\n        selector = label;\n    }\n\n    return selector ? `(${symbol}:${selector})` : symbol;\n}\n\n// Return 'class', 'abstract class', 'interface, 'enum'\n// when appropriate\nfunction getQualifiedName(node) {\n    if (!node || node.kind === 0) return '';\n    if (node.kind === 256) {\n        // Interface\n        return (\n            span('interface ', 'keyword') +\n            '<strong>' +\n            getName(node) +\n            '</strong>'\n        );\n    }\n    if (node.kind === 128) {\n        // Class\n        if (hasFlag(node, 'isAbstract')) {\n            return (\n                span('abstract class ', 'keyword') +\n                '<strong>' +\n                getName(node) +\n                '</strong>'\n            );\n        }\n        return (\n            span('class ', 'keyword') + '<strong>' + getName(node) + '</strong>'\n        );\n    }\n    if (node.kind === 4) {\n        // Enum\n        return (\n            span('enum ', 'keyword') + '<strong>' + getName(node) + '</strong>'\n        );\n    }\n    if (node.kind === 2) {\n        // Namespace.\n        // There's a bug in typedeoc:\n        // https://github.com/TypeStrong/typedoc/issues/1284\n        // exported modules are returned as 'namespace' with a stringLiteral value\n        if (/^\"(.*)\"$/.test(node.name)) {\n            return (\n                span('module ', 'keyword') +\n                '<strong>' +\n                trimQuotes(node.name) +\n                '</strong>'\n            );\n        }\n        return (\n            span('namespace ', 'keyword') +\n            '<strong>' +\n            getName(node) +\n            '</strong>'\n        );\n    }\n    if (node.kind === 1) {\n        // Module.\n        return (\n            span('module ', 'keyword') +\n            '<strong>' +\n            '\"' +\n            getName(node) +\n            '\"' +\n            '</strong>'\n        );\n    }\n}\n\n// See: https://github.com/microsoft/tsdoc/blob/master/spec/code-snippets/DeclarationReferences.ts\n// link is a string, representing a potentially non-resolved symbol, for\n// example \"Foo\", or a resolved one: \"(Foo:variable)\"\n// or \"(Foo:class).(Bar.function)\" or \"https://host.com/path/#Foo\"\n// or \"@module/path/director#Foo\"\n\nfunction resolveLink(node, link) {\n    if (/^http[s]?:\\/\\//.test(link)) {\n        // It's a regular URL\n        return link;\n    }\n    if (!getReflectionByLink(link, node)) {\n        // Check that the link actually resolves to a reflection\n        console.warn('Unresolved link : ', link);\n        // Even if it doesn't, we can still generate a URL, but it\n        // likely won't point to anywhere.\n    }\n    let result = '';\n    const imports = link.split('#');\n    if (imports.length > 1) {\n        result = imports[0];\n        // Omit what comes before '#'\n        link = imports.slice(1).join('');\n        // @todo: resolve external references. Maybe have a mapping table\n        // specified with @externallink foo=href ?\n    }\n    const linkSegments = link.split('.');\n    result +=\n        '#' +\n        encodeURIComponent(\n            linkSegments\n                .map((linkSegment) => {\n                    if (/^\\(.*\\)$/.test(linkSegment)) {\n                        // It's already a fully qualified symbol, just return it\n                        // '(Foo:class)'\n                        return linkSegment;\n                    }\n                    // This link segment needs to be resolved to a\n                    // more specific \"(Foo:class)\" if there are no ambiguity\n                    // 'Foo' -> '(Foo:class)'\n                    let candidate = getReflectionByName(linkSegment, node);\n                    if (candidate) {\n                        return getQualifiedSymbol(node, candidate);\n                    }\n                    candidate = getReflectionByName(linkSegment);\n                    if (candidate) {\n                        return getQualifiedSymbol(null, candidate);\n                    }\n                    console.warn('Unresolved symbol ', linkSegment);\n                    return linkSegment;\n                })\n                .join('.')\n        );\n    return result;\n}\n\n/**\n * Render the JSDOC links that may be included in comments.\n *\n * These links could point to symbols in this file, or to some external\n * resources\n *\n */\n\nfunction renderLinkTags(node, str) {\n    str = str.replace(\n        /{@tutorial\\s+(\\S+?)[ \\|]+(.+?)}/g,\n        (_match, p1, p2) => `<a href=\"${p1}\">${p2}</a>`\n    );\n    str = str.replace(\n        /{@tutorial\\s+(\\S+?)}/g,\n        (_match, p1) => `<a href=\"${p1}\">${p1}</a>`\n    );\n\n    // @linkcode and [[``]]...\n    // ... with title\n    str = str.replace(\n        /{@linkcode\\s+(\\S+?)\\s*\\|\\s*(.+?)}/g,\n        (_match, p1, p2) =>\n            `<a href=\"${resolveLink(node, p1)}\"><code>${p2}</code></a>`\n    );\n    // ... no title\n    str = str.replace(\n        /{@linkcode\\s+(\\S+?)}/g,\n        (_match, p1) =>\n            `<a href=\"${resolveLink(node, p1)}\"><code>${p1}</code></a>`\n    );\n    // ... [[`` | ]]\n    str = str.replace(\n        /\\[\\[\\`(\\S+?)\\`\\s*\\|\\s*(.+?)\\]\\]/g,\n        (_match, p1) =>\n            `<a href=\"${resolveLink(node, p1)}\"><code>${p1}</code></a>`\n    );\n    // ... [[``]]\n    str = str.replace(\n        /\\[\\[\\`(\\S+?)\\`\\]\\]/g,\n        (_match, p1) =>\n            `<a href=\"${resolveLink(node, p1)}\"><code>${p1}</code></a>`\n    );\n\n    // Plain link...\n    // ... @link and @linkplain no title\n    str = str.replace(\n        /{@(?:link|linkplain)\\s+(\\S+?)}/g,\n        (_match, p1) => `<a href=\"${resolveLink(node, p1)}\">${p1}</a>`\n    );\n\n    // ... @link and @linkplain with title\n    str = str.replace(\n        /{@(?:link|linkplain)\\s+(\\S+?)\\s*\\|\\s*(.+?)}/g,\n        (_match, p1, p2) => `<a href=\"${resolveLink(node, p1)}\">${p2}</a>`\n    );\n\n    // ... [[]]\n    str = str.replace(\n        /\\[\\[(\\S+?)\\]\\]/g,\n        (_match, p1) => `<a href=\"${resolveLink(node, p1)}\">${p1}</a>`\n    );\n\n    // ... [[ | ]] with title\n    str = str.replace(\n        /\\[\\[(\\S+?)\\s*\\|\\s*(.+?)\\]\\]/g,\n        (_match, p1, p2) => `<a href=\"${resolveLink(node, p1)}\">${p2}</a>`\n    );\n\n    // {@inheritdoc ...}\n    str = str.replace(/({@(?:inheritdoc)\\s+(\\S+?)})/g, (_match, p1, p2) => {\n        let node = getReflectionByLink(p2);\n        if (!node) {\n            console.warn('Unresolved link in @inheritdoc :', p2);\n            return p1;\n        }\n        return renderComment(node);\n    });\n\n    return str;\n}\n\n/**\n */\n\nfunction renderNotices(node, str) {\n    const lines = str.split('\\n');\n    const blocks = [];\n    let inShortBlock = false;\n    let inLongBlock = false;\n    let currentBlock = [];\n    let currentType = '';\n    lines.forEach((line) => {\n        if (inShortBlock) {\n            // Looking for an empty line\n            let m = line.match(/^\\s*$/i);\n            if (m) {\n                if (currentBlock.length > 0) {\n                    blocks.push({\n                        type: currentType,\n                        content: currentBlock.join('\\n'),\n                    });\n                }\n                inShortBlock = false;\n                currentType = '';\n                currentBlock = [];\n            } else {\n                // Still in a short block\n                currentBlock.push(line);\n            }\n        } else if (inLongBlock) {\n            // Looking for a '---' or '***' at the begining of the line\n            if (/^[ ]{0,3}(\\*\\*\\*|---)/.test(line)) {\n                if (currentBlock.length > 0) {\n                    blocks.push({\n                        type: currentType,\n                        content: currentBlock.join('\\n'),\n                    });\n                }\n                inLongBlock = false;\n                currentType = '';\n                currentBlock = [];\n            } else {\n                // Still in a long block\n                currentBlock.push(line);\n            }\n        } else {\n            // Looking for a notice tag at the start of the line:\n            // '**(note)**', etc..\n            let m = line.match(/\\n*\\*\\*\\(([^]+)\\):?\\s*\\*\\*\\s*:?\\s*([^]+)/i);\n            if (m) {\n                // Found a short note\n                if (currentBlock.length > 0) {\n                    blocks.push({\n                        type: currentType,\n                        content: currentBlock.join('\\n'),\n                    });\n                }\n                inShortBlock = true;\n                currentType = m[1];\n                currentBlock = [m[2]];\n            } else {\n                m = line.match(/\\n*\\*\\*\\(([^]+)\\):?\\s*\\*\\*\\s*:?\\s*$/i);\n                if (m) {\n                    // Found a long note\n                    if (currentBlock.length > 0) {\n                        blocks.push({\n                            type: currentType,\n                            content: currentBlock.join('\\n'),\n                        });\n                    }\n                    inLongBlock = true;\n                    currentType = m[1];\n                    currentBlock = [];\n                } else {\n                    // Nothing special\n                    currentBlock.push(line);\n                }\n            }\n        }\n    });\n    if (currentBlock.length > 0) {\n        blocks.push({ type: currentType, content: currentBlock.join('\\n') });\n    }\n    return blocks\n        .map((block) => {\n            if (block.type) {\n                let noticeType =\n                    {\n                        danger: 'danger',\n                        warning: 'warning',\n                        caution: 'warning',\n                    }[block.type.toLowerCase()] || 'info';\n                let result = '\\n<div class=\"notice--' + noticeType + '\">';\n                result += '\\n<h4>' + block.type + '</h4>\\n';\n                result += markdown.render(renderLinkTags(node, block.content));\n                result += '\\n</div>\\n';\n                return result;\n            }\n            return markdown.render(renderLinkTags(node, block.content));\n        })\n        .join('\\n');\n}\n\nfunction renderComment(node) {\n    if (!node) return '';\n    if (node.signatures && !node.comment)\n        return renderComment(node.signatures[0]);\n    if (!node.comment) return '';\n    let result = '';\n    let newLine = '\\n';\n\n    if (node.comment.shortText) {\n        result += renderNotices(node, node.comment.shortText) + newLine;\n    }\n    if (node.comment.text) {\n        result += renderNotices(node, node.comment.text) + newLine;\n    }\n    const remarks = getTag(node.comment, 'remarks');\n    if (remarks) {\n        result += renderNotices(node, remarks) + newLine;\n    }\n\n    if (node.comment.tags && node.comment.tags.length > 0) {\n        result +=\n            newLine +\n            node.comment.tags\n                .map((x) => renderTag(node, x.tag, x.text))\n                .filter((x) => !!x)\n                .join(newLine + newLine) +\n            newLine;\n    }\n    return result;\n}\n\nfunction getModuleName(node) {\n    if (!node) return '';\n    if (node.kind === 1) {\n        return trimQuotes(node.name).replace(/\\.d$/, '');\n    }\n    return getModuleName(getParent(node));\n}\n\nfunction shouldIgnore(node) {\n    return (\n        hasTag(node, 'hidden') ||\n        hasTag(node, 'ignore') ||\n        hasTag(node, 'internal')\n    );\n}\n\n/**\n * Render the top portion of the card, including the node name,\n * flags, anchor\n */\n\nfunction renderCardHeader(node, displayName?) {\n    const parent = getParent(node);\n    if (!displayName) {\n        displayName = `<strong>${getName(node)}</strong>`;\n        // If enum, variable (property), function (method), class,\n        // interface\n        if (\n            node.kind === 4 ||\n            node.kind === 32 ||\n            node.kind === 64 ||\n            node.kind === 128 ||\n            node.kind === 256 ||\n            node.kind === 1024 ||\n            node.kind === 2048\n        ) {\n            if (\n                parent &&\n                (parent.kind === 1 || parent.kind === 2 || parent.kind === 256)\n            ) {\n                // Parent is a namespace or class or interface\n                displayName = getName(parent) + '.' + displayName;\n            }\n        }\n    }\n\n    const permalink = makePermalink(node);\n\n    let result = `\\n<section class=\"card\" id=\"${encodeURIComponent(\n        permalink.anchor\n    )}\">\\n`;\n    // The permalink should refer to this document (and therefore be empty)\n    console.assert(!permalink.document);\n    result += `\\n<h3 `;\n    if (hasTag(node, 'deprecated')) result += 'class=\"deprecated\" ';\n    result += '>';\n    result += renderFlags(node);\n    result += '<span>' + displayName + '</span>';\n    result += renderPermalinkAnchor(permalink);\n    result += '</h3>';\n\n    return result;\n}\n\n/**\n * Render the bottom portion of the card, including the node comments\n * and miscellaneous tags.\n */\n\nfunction renderCardFooter(node) {\n    return renderComment(node) + '\\n</section>\\n';\n}\n\n/**\n * Each function or methods has its own separate card\n * json.kind =\n * - 64: function\n * - 512: constructor\n * - 2048: method\n *\n */\nfunction renderMethodCard(node) {\n    if (shouldIgnore(node)) return '';\n\n    // The @command tag can be placed either on each individual entry\n    // or on the interface/class that groups them\n    let result = renderCommandCard(node);\n    if (result) return result;\n\n    const parent = getParent(node);\n    let displayName = '';\n    let shortName = '';\n    if (node.kind === 512) {\n        // Constructor\n        // Constructors *always* have a parent\n        displayName =\n            span('new ', 'keyword') + `<strong>${parent.name}</strong>`;\n        shortName = displayName;\n    } else if (parent && parent.kind === 1) {\n        // Parent is a module\n        shortName = `<strong>${node.name}</strong>`;\n        displayName = `<em>module ${parent.name}</em>` + shortName;\n    } else if (parent && (parent.kind & (2 | 4 | 128 | 256)) !== 0) {\n        // Parent is a module, namespace, enum, class or interface\n        // Function or method\n        shortName = `<strong>${node.name}</strong>`;\n        // There's a bug in typedeoc:\n        // https://github.com/TypeStrong/typedoc/issues/1284\n        // exported modules are returned as 'namespace' with a stringLiteral value\n        if (parent.kind === 2 && /^\"(.*)\"$/.test(parent.name)) {\n            displayName =\n                `<em>module ${trimQuotes(parent.name)}</em>` + shortName;\n        } else {\n            displayName = parent.name + '.' + shortName;\n        }\n    } else {\n        shortName = `<strong>${node.name}</strong>`;\n        displayName = shortName;\n    }\n    result = renderCardHeader(node, displayName);\n\n    result += '\\n<div>\\n';\n\n    // Display one or more function signatures,\n    // which include a summary of the signature, e.g.\n    // - function foo.bar(x: string): number\n    // - comments about this function\n    // - details about each of the arguments\n\n    result += node.signatures\n        .map((signature) => {\n            let result = '\\n<div>\\n';\n            result += renderFlags(signature);\n            result += '\\n<div><code>\\n';\n            result += shortName;\n            // Display the \"short\" signature (kind 4096)\n            result += render(signature, 'inline');\n            result += '\\n</code></div>\\n';\n\n            // result += renderComment(signature);\n\n            // Display info about each of the params...\n            result += render(signature, 'block');\n\n            result += '\\n<div>\\n';\n            return result;\n        })\n        .join('\\n<hr>\\n');\n\n    return result + '\\n</div>\\n' + renderCardFooter(node);\n}\n\n/**\n * Card for an accessor (get/set)\n */\nfunction renderAccessorCard(node) {\n    if (shouldIgnore(node)) return '';\n\n    let displayName = '';\n\n    if (node.getSignature && node.setSignature) {\n        // set/get\n        displayName =\n            span('get/set ', 'keyword') + `<strong>${node.name}</strong>`;\n    } else if (node.getSignature) {\n        // get only\n        displayName = span('get ', 'keyword') + `<strong>${node.name}</strong>`;\n    } else {\n        // set only\n        displayName = span('set ', 'keyword') + `<strong>${node.name}</strong>`;\n    }\n    let result = renderCardHeader(node, displayName);\n\n    result += '\\n<div>\\n';\n\n    const type = node.getSignature\n        ? node.getSignature[0].type\n        : node.setSignature[0].type;\n    result += '\\n<div>\\n';\n    result += '\\n<div>';\n    result += '<code>\\n';\n    result += node.name;\n    result += punct(': ');\n    result += render(type, 'inline');\n    result += '\\n</code>';\n    if (node.getSignature && !node.setSignature) {\n        result += span('read only', 'modifier-tag');\n    } else if (!node.getSignature && node.setSignature) {\n        result += span('write only', 'modifier-tag');\n    }\n    result += '</div>\\n';\n\n    result += '\\n<div>\\n';\n\n    return result + '\\n</div>\\n' + renderCardFooter(node);\n}\n\n/**\n * A class section is a top level section containing a table of content\n * (for each member method/property), grouped by categories,\n * followed by a card for each method/property\n */\n\nfunction renderClassSection(node) {\n    // If it's just a forward declaration, e.g.\n    // `declare class Mathfield{}`\n    // there are no children (methods, etc...) to inspect and we don't render it.\n    if (shouldIgnore(node) || !node.children) return '';\n\n    if (\n        node.groups.length === 1 &&\n        (node.groups[0].kind & (1024 | 2048)) !== 0 &&\n        !hasTag(node, 'command')\n    ) {\n        // There's a single group (all the children are the same kind)\n        // and all the children are properties or methods\n        return render(node, 'card');\n    }\n\n    const permalink = makePermalink(node);\n    let result = `<section id=\"${encodeURIComponent(permalink.anchor)}\">`;\n    result += '<h2';\n    if (hasTag(node, 'deprecated')) result += ' class=\"deprecated\"';\n    result += '>';\n\n    const parent = getParent(node);\n    if (parent) {\n        result += '<em>' + getQualifiedName(parent) + '</em>';\n    }\n\n    result += '<span>' + getQualifiedName(node) + '</span>';\n    result += renderPermalinkAnchor(permalink);\n    result += '</h2>';\n\n    result += renderFlags(node);\n\n    result += '<div>';\n    if (node.extendedTypes) {\n        result +=\n            '<p>' +\n            span('Extends:', 'tag-name') +\n            node.extendedTypes\n                .map((x) => render(x))\n                .filter((x) => !!x)\n                .join(', ') +\n            '</p>';\n    }\n\n    if (node.implementedTypes) {\n        result +=\n            '<p>' +\n            span('Implements:', 'tag-name') +\n            node.implementedTypes\n                .map((x) => render(x))\n                .filter((x) => !!x)\n                .join(', ') +\n            '</p>';\n    }\n\n    if (node.extendedBy) {\n        result +=\n            '<p>' +\n            span('Extended by:', 'tag-name') +\n            node.extendedBy\n                .map((x) => render(x))\n                .filter((x) => !!x)\n                .join(', ') +\n            '</p>';\n    }\n\n    if (node.implementedBy) {\n        result +=\n            '<p>' +\n            span('Implemented by:', 'tag-name') +\n            node.implementedBy\n                .map((x) => render(x))\n                .filter((x) => !!x)\n                .join(', ') +\n            '</p>';\n    }\n    result += '</div>';\n\n    return result + renderGroups(node) + '</section>';\n}\n\n/**\n * Classes and interfaces are usually rendered as a header, some comment,\n * followed by a card for each of its member.\n *\n * However, if the interface/class is 'simple' (all members are properties\n * or all members are methods, and few comments) the class/interface\n * is rendered as a single card.\n * The decision is made in renderClassSection()\n */\n\nfunction renderClassCard(node) {\n    if (shouldIgnore(node) || !node.children) return '';\n    let result = renderCardHeader(node, getQualifiedName(node));\n    result += '<dl><dt id=\"';\n    result += node.children\n        .map((x) => {\n            let permalink = makePermalink(x);\n            let r = encodeURIComponent(permalink.anchor) + '\">';\n            if (x.kind === 2048) {\n                // Method\n                r +=\n                    x.signatures\n                        .map(\n                            (signature) =>\n                                renderFlags(x, 'inline') +\n                                '<strong>' +\n                                x.name +\n                                '</strong>' +\n                                render(signature) +\n                                renderPermalinkAnchor(permalink) +\n                                '</dt><dd>' +\n                                renderComment(signature)\n                        )\n                        .join('</dd><dt>') + '</dd>';\n            } else if (x.kind === 1024) {\n                // Property\n                r +=\n                    '<strong>' +\n                    x.name +\n                    '</strong>' +\n                    punct(': ') +\n                    render(x.type) +\n                    renderPermalinkAnchor(permalink) +\n                    '</dt><dd>' +\n                    renderComment(x);\n            } else {\n                // Only expected a property or a method\n                // in a \"short\" class/interface\n                console.error('Unexpected item in a \"short\" class/interface');\n            }\n            return r;\n        })\n        .join('\\n</dd><dt id=\"');\n    result += '\\n</dd></dl>\\n';\n    return result + renderCardFooter(node);\n}\n\n/**\n * A command is identified by a selector and dispatched with another\n * function, for example the \"selectAll\" selector and `perform(\"selectAll\")`\n * A command can be specified either as a property (of type function) or a\n * function (typically in an interface).\n * The @command tag on the interface indicates that the properties/methods\n * of the interface should be interepreted as methods.\n */\nfunction renderCommandCard(node) {\n    let parent = getParent(node);\n    let commandTag = (\n        getTag(node, 'command') || getTag(parent, 'command')\n    ).trim();\n    if (!commandTag) return '';\n\n    let signature;\n    if (node.kind === 1024) {\n        // It's a property\n        if (!node.type.declaration) return '';\n        signature = node.type.declaration.signatures[0];\n    } else if (node.kind === 2048) {\n        // A method\n        signature = node.signatures[0];\n    } else {\n        return '';\n    }\n    let params = [...signature.parameters];\n\n    let result = renderCardHeader(\n        node,\n        '<span class=\"modifier-tag\">command</span><strong>' +\n            node.name +\n            '</strong>'\n    );\n    result += '<div>';\n    result += '<code>' + commandTag + punct('(');\n    params.shift(); // The sender\n    if (params.length > 0) {\n        result += punct('[');\n        result += span('\"' + node.name + '\"', 'stringLiteral');\n        result += punct(', ');\n        result += params.map((x) => render(x)).join(punct(', '));\n        result += punct(']');\n    } else {\n        // No extra params, just the selector\n        result += span('\"' + node.name + '\"', 'stringLiteral');\n    }\n    result += punct(')');\n    if (signature.type) {\n        result += punct(': ');\n        result += render(signature.type);\n    }\n    result += '</code>';\n\n    if (params.length > 0 || signature.type) {\n        result += '\\n<dl>\\n';\n\n        if (params.length > 0) {\n            // Display each of the additional parameters, and their info\n            result +=\n                '\\n<dt>\\n' +\n                params\n                    .map((param) => {\n                        let r =\n                            '<strong><var>' + param.name + '</var></strong>';\n                        const typeDef = render(param.type, 'block');\n                        if (typeDef) {\n                            r += punct(': ') + typeDef;\n                        }\n                        r += '\\n</dt><dd>\\n';\n                        r += renderComment(param);\n                        return r;\n                    })\n                    .join('\\n</dd><dt>\\n');\n            result += '\\n</dd>\\n';\n        }\n        if (signature.type && hasTag(node, 'returns')) {\n            // The is a return type\n            result += '\\n<dt>\\n';\n            result += '<strong>→ </strong>' + render(signature.type);\n            result += '\\n</dt><dd>\\n';\n            if (hasTag(node, 'returns')) {\n                result += renderNotices(node, getTag(node, 'returns'));\n            }\n            result += '\\n</dd>\\n';\n        }\n        result += '\\n</dl>\\n';\n    }\n    result += '\\n</div>';\n\n    return result + renderCardFooter(node);\n}\n\n/**\n * Interfaces and classes have properties (which can be functions)\n * This renders a card for a property\n * kind = 1024\n */\nfunction renderPropertyCard(node) {\n    if (shouldIgnore(node)) return '';\n\n    // The @command tag can be placed either on each individual entry\n    // or on the interface/class that groups them\n    let result = renderCommandCard(node);\n    if (result) return result;\n\n    const parent = getParent(node);\n    let displayName = '';\n    let shortName = '';\n    if (parent && (parent.kind & (1 | 2 | 4 | 128 | 256)) !== 0) {\n        // Parent is a module, namespace, enum, class or interface\n        // Function or method\n        shortName = `<strong>${node.name}</strong>`;\n        displayName = parent.name + '.' + shortName;\n    }\n    return (\n        renderCardHeader(node, displayName) +\n        render(node.type, 'block') +\n        renderCardFooter(node)\n    );\n}\n\n/**\n * A card for an enum\n * kind = 4\n */\nfunction renderEnumCard(node) {\n    if (shouldIgnore(node)) return '';\n    let result = renderCardHeader(node);\n    if (node.children) {\n        result += '<dl>';\n        result += node.children\n            .map((enumMember) => {\n                return render(enumMember, 'block');\n            })\n            .join('');\n        result += '</dl>';\n    }\n    return result + renderCardFooter(node);\n}\n\nfunction renderTypeAliasCard(node) {\n    if (shouldIgnore(node)) return '';\n    let result = renderCardHeader(node);\n\n    const typeDef = render(node, 'block');\n    if (typeDef) {\n        result += '<div>';\n        result += '<code>';\n        result += typeDef;\n        result += '</code>';\n        result += '</div>';\n\n        result += '\\n\\n';\n    }\n    result += renderCardFooter(node);\n    return result;\n}\n\n/**\n * Groups are a collection of related items (for example all variables,\n *  all types, all functions, etc...) while `node.children` are all\n * of these items, but in their declaration order.\n *\n * Only used when in 'card' style.\n *\n * Groups have a 'children' property which is an array of ID\n *  referring to the items\n */\nfunction renderGroup(node, group) {\n    const topics = getCategories(node, group.kind);\n    // If there are any children, there should always be at least\n    // one \"Other\" topic\n    if (topics.length === 0) return '';\n    // Render heading for group, e.g. \"Types\"... and index\n    let result = '<section>';\n    if (\n        group.title !== 'Constructors' &&\n        group.title !== 'Accessors' &&\n        group.title !== 'Namespaces'\n    ) {\n        if (\n            (group.kind === 1024 || group.kind === 2048) &&\n            hasTag(node, 'command')\n        ) {\n            // It's a series of commands. Display the index, but no title\n            result += renderIndex(node, '', topics);\n        } else if (\n            !((group.kind & (1 | 2 | 4 | 128 | 256)) !== 0) &&\n            group.children <= 1\n        ) {\n            // Group is not a module, namespace, enum, class or\n            // interface with a single entry\n            const displayTitle =\n                { 'Type aliases': 'Types' }[group.title] || group.title;\n            result += renderIndex(node, displayTitle, topics);\n        }\n    }\n    const body = topics\n        .map((topic) => {\n            let r = '';\n            if (topic.title) {\n                r += '<h3 class=\"category-title\">';\n                r += topic.title + '</h3>\\n';\n            }\n            r += topic.children.map((x) => render(x, 'section')).join('\\n');\n            return r;\n        })\n        .join('');\n    if (!body) return '';\n    return result + body + '</section>';\n}\n\nfunction renderGroups(node) {\n    if (!node.groups) return '';\n    let groups = sortGroups(node.groups);\n    return (\n        renderComment(node) +\n        groups\n            .map((x) => renderGroup(node, x))\n            .filter((x) => !!x)\n            .join('\\n\\n')\n    );\n}\n\n/**\n * Render a reflection (an 'element'), such as a module, a variable, a type declaration,\n * an argument list, a type definition, etc...\n *\n * @param style One of:\n * - 'inline' keep all the output info in a single line\n * - 'block' if necessary, use multiple lines to render\n * - 'card' for some types (function definition), display them using a 'card'\n * section. This allows the most info to be displayed, including comments about\n * this item.\n */\nfunction render(node, style = 'inline') {\n    // See https://github.com/TypeStrong/typedoc/blob/master/src/lib/models/reflections/abstract.ts\n    // for a list of the possible reflection kinds\n\n    // On occasion, some nodes are not reachable by traversing the\n    // tree. In this case, getReflectionById() fails and render()\n    // can get called with an undefined node. Fail gracefully.\n    // This happens for example with\n    // ```\n    //   export function foo(options: {\n    //        withHighlighting: boolean;\n    //    }) : boolean\n    // ```\n    // 'withHighlighting' is a variable, but unreachable\n\n    if (typeof node === 'undefined') return '';\n    if (typeof node === 'number') node = getReflectionByID(node);\n    if (typeof node === 'string') node = getReflectionByName(node);\n\n    // If there are groups (i.e. all methods for a class), use them.\n    // Otherwise, node.children will have the full list, but not grouped by 'kind'.\n    if (style === 'section' && node.groups) {\n        if (node.kind === 128 || node.kind === 256) {\n            // Class or Interface\n            return renderClassSection(node);\n        } else if (node.kind === 4) {\n            // Enum\n            return renderEnumCard(node);\n        }\n        return renderGroups(node);\n    }\n\n    let parent = getParent(node);\n\n    if (node.type === 'abstract') {\n        // @todo\n        /*\nabstract class Animal {\n    abstract makeSound(): void;\n    move(): void {\n        console.log(\"roaming the earth...\");\n    }\n}\n*/ console.error(\n            'Unexpected node type ',\n            node.type\n        );\n    }\n\n    if (node.type === 'array') {\n        // @check (number | string)[]\n        return render(node.elementType, 'inline') + punct('[]');\n    }\n\n    if (node.type === 'conditionals') {\n        // @todo\n        // 'T extends U ? X : Y'\n        console.error('Unexpected node type ', node.type);\n    }\n\n    if (node.type === 'index') {\n        console.error('Unexpected node type ', node.type);\n    }\n\n    if (node.type === 'indexedAccess') {\n        // e.g. 'T[U]'\n        return (\n            render(node.objectType) +\n            punct('[') +\n            render(node.indexType) +\n            punct(']')\n        );\n    }\n\n    if (node.type === 'inferred') {\n        console.error('Unexpected node type ', node.type);\n    }\n\n    if (node.type === 'intersection') {\n        if (style === 'block') {\n            return (\n                '<ul class=\"type-block\"><li>' +\n                node.types\n                    .map((x) => render(x))\n                    .filter((x) => !!x)\n                    .join(punct(' &amp; ') + '</li>\\n<li>') +\n                '</li></ul>'\n            );\n        }\n        return node.types\n            .map((x) => render(x))\n            .filter((x) => !!x)\n            .join(punct(' &amp; '));\n    }\n\n    if (node.type === 'intrinsic') {\n        // E.g. \"number\", \"string\", etc...\n        return span(node.name, 'keyword');\n    }\n\n    if (node.type === 'predicate') {\n        console.error('Unexpected node type ', node.type);\n    }\n\n    if (node.type === 'reference') {\n        // E.g. the name of another type\n        // For example, T in 'f(a:T)'\n\n        let name = node.name;\n        if (node.typeArguments) {\n            name += punct('<');\n            name += node.typeArguments.map((x) => render(x)).join(punct(', '));\n            name += punct('>');\n        }\n\n        // Enum, Class, Interface, TypeAlias\n        let candidate;\n        if (typeof node.id !== 'undefined') {\n            candidate = getReflectionByID(node.id);\n        }\n\n        if (!candidate) {\n            // Find by name in the parent space\n            candidate = getReflectionByName(\n                name,\n                parent,\n                4 | 128 | 256 | 4194304\n            );\n        }\n        if (candidate) {\n            const permalink = makePermalink(candidate);\n            if (candidate.kind === 16) {\n                // For enum members, include the parent (the Enum) name\n                permalink.title = permalink.parent.name + '.' + node.name;\n            } else {\n                permalink.title = name; // Don't render(), it's a reference, we just need its name\n            }\n            return renderPermalink(permalink);\n        }\n\n        // Find by name in the global space\n        candidate = getReflectionByName(\n            name,\n            undefined,\n            4 | 128 | 256 | 4194304\n        );\n        if (candidate) {\n            return renderPermalink(makePermalink(candidate), name);\n        }\n        if (candidate) {\n            return name; // Don't render, it's a reference, we just need its name\n        }\n\n        if (\n            [\n                'Object',\n                'Function',\n                'Boolean',\n                'Symbol',\n                'String',\n                'RegExp',\n                'Object',\n                'Number',\n                'BigInt',\n                'Math',\n                'Date',\n                'Infinity',\n                'NaN',\n                'globalThis',\n                'Error',\n                'AggregateError',\n                'InternalError',\n                'RangeError',\n                'ReferenceError',\n                'SyntaxError',\n                'TypeError',\n                'URIError',\n                'Array',\n                'Int8Array',\n                'Uint8Array',\n                'Uint8Array',\n                'Uint8ClampedArray',\n                'Int16Array',\n                'Uint16Array',\n                'Int32Array',\n                'Uint32Array',\n                'Float32Array',\n                'Float64Array',\n                'BigInt64Array',\n                'BigUint64Array',\n                'Map',\n                'Set',\n                'WeakMap',\n                'WeakSet',\n                'ArrayBuffer',\n                'SharedArrayBuffer',\n                'Atomics',\n                'DataView',\n                'JSON',\n                'Promise',\n                'Generator',\n                'GeneratorFunction',\n                'AsyncFunction',\n                'Iterator',\n                'AsyncIterator',\n                'Reflect',\n                'Proxy',\n                'Intl',\n                'WebAssembly',\n            ].includes(node.name)\n        ) {\n            return (\n                '<a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/' +\n                node.name +\n                '\" class=\"externallink\">' +\n                name +\n                '<svg><use xlink:href=\"#external-link\"></use></svg>' +\n                '</a>'\n            );\n        }\n\n        // We could not resolve this reference.\n        // This can happen for globally defined types, for example\n        // 'KeyboardEvent'\n        // In that case, create a link to reference documentation\n        return (\n            '<a href=\"https://developer.mozilla.org/Web/API/' +\n            node.name +\n            '\" class=\"externallink\">' +\n            name +\n            '<svg><use xlink:href=\"#external-link\"></use></svg>' +\n            '</a>'\n        );\n    }\n\n    if (node.type === 'reflection') {\n        return render(node.declaration, style);\n    }\n\n    if (node.type === 'stringLiteral') {\n        return span('\"' + node.value + '\"', 'stringLiteral');\n    }\n\n    if (node.type === 'tuple') {\n        return (\n            punct('[') +\n            node.elements\n                .map((x) => render(x))\n                .filter((x) => !!x)\n                .join(punct(', ')) +\n            punct(']')\n        );\n    }\n\n    if (node.type === 'typeOperator') {\n        // e.g.. 'typeof'\n        return span(node.operator + ' ', 'keyword') + render(node.target);\n    }\n\n    if (node.type === 'typeParameter') {\n        // The name of a referenced type, e.g.\n        // 'U' in 'T[U]'\n        let result = renderPermalink(makePermalink(node));\n        if (node.constraint) {\n            result += span(' extends ', 'keyword');\n            result += render(node.constraint);\n        }\n        return result;\n    }\n\n    if (node.type === 'union') {\n        // E.g. \"a | b\"\n        if (style === 'block' && !everyStringLiteral(node.types)) {\n            return (\n                '<ul class=\"type-block\"><li>' +\n                punct('| ') +\n                node.types\n                    .map((x) => render(x))\n                    .join('</li>\\n<li>' + punct('| ')) +\n                '</li></ul>'\n            );\n        } else {\n            return node.types.map((x) => render(x)).join(punct(' | '));\n        }\n    }\n\n    if (node.type === 'unknown') {\n        // This is used when the type is... not known. For example in\n        // `export const PI = 3.1415`, the type is 'unknown' (which has a 'name'\n        // value of \"3.1415\"\n        return '';\n    }\n\n    if (node.type === 'void') {\n        return span('void', 'keyword');\n    }\n\n    let result = '';\n\n    switch (node.kind) {\n        case 0: // Global/File\n        case 1: // Module\n        case 2: // Namespace\n        case 4: // Enum\n            // We always do it by groups\n            console.assert('Unexpected node kind ', node.kind);\n            break;\n\n        case 16: // Enum Member\n            result = `<dt id=\"${encodeURIComponent(\n                makePermalink(node).anchor\n            )}\">`;\n            result += '<strong>' + node.name + '</strong>';\n            if (typeof node.defaultValue === 'string') {\n                result += punct(' = ') + node.defaultValue;\n            }\n            result += '</dt><dd>';\n            result += renderFlags(node);\n            result += renderComment(node);\n            result += '</dd>';\n            break;\n\n        case 32: // Variable\n            // e.g. \"a?: number\" as a property of an object\n            if (style === 'card' || style === 'section') {\n                result = renderCardHeader(node);\n                result += '<div>' + render(node, 'block') + '</div>';\n                result += renderCardFooter(node);\n            } else {\n                result += '<strong>' + node.name + '</strong>';\n                if (hasFlag(node, 'isOptional')) {\n                    result += span('?', 'modifier');\n                }\n                if (node.type && node.type.type === 'unknown') {\n                    result += punct(' = ');\n                    result += node.type.name || '';\n                }\n                if (node.type && node.type.type !== 'unknown') {\n                    result += punct(': ');\n                    result += render(node.type);\n                }\n            }\n            break;\n\n        case 64: // Function\n            if (style === 'card' || style === 'section') {\n                result = renderMethodCard(node);\n            } else {\n                console.warn('Unexpected style, kind ', node.kind);\n            }\n            break;\n\n        case 128: // Class\n            if (style === 'card' || style === 'section') {\n                // Classes are usually rendered as a 'section' in renderClassSection()\n                // but if it's a very simple interface (uniform kind of children, few comments)\n                // we'll render it as a single card\n                // The decision is made in renderClassSection()\n\n                result = renderClassCard(node);\n            } else {\n                result = node.name;\n            }\n            break;\n\n        case 256: // Interface\n            if (style === 'card' || style === 'section') {\n                // Interfaces are usually rendered as a 'section' in renderClassSection()\n                // but if it's a very simple interface (uniform kind of children, few comments)\n                // we'll render it as a single card\n                // The decision is made in renderClassSection()\n\n                result = renderClassCard(node);\n            } else {\n                result = node.name;\n            }\n            break;\n\n        case 512: // Constructor\n            if (style === 'card' || style === 'section') {\n                result = renderMethodCard(node);\n            } else {\n                console.warn('Unexpected style, kind ', node.kind);\n            }\n            break;\n\n        case 1024: // Property (of a class or interface)\n            if (style === 'card' || style === 'section') {\n                result = renderPropertyCard(node);\n            } else {\n                result =\n                    (parent ? parent.name + '.' : '') +\n                    node.name +\n                    punct(': ') +\n                    render(node.type, style);\n            }\n            break;\n\n        case 2048: // Method (of a class or interface) (may have multiple signatures)\n            if (style === 'card' || style === 'section') {\n                result = renderMethodCard(node);\n            } else {\n                console.error('Function Signature style not supported');\n            }\n            break;\n\n        case 4096: // Call signature\n        case 16384: // Constructor signature\n            // E.g. in 'f(a: T): U', the '(a: T):U' part.\n            if (style === 'inline') {\n                // (a:b) : c\n                result = punct('(');\n                if (node.parameters) {\n                    result += node.parameters\n                        .map((x) => render(x))\n                        .join(punct(', '));\n                }\n                result += punct(')');\n                result += punct(': ') + render(node.type);\n            } else if (style === 'block') {\n                // Display info for each param:\n                // - a: b blah blah\n                // - -> c blah blah\n                if (node.parameters || node.type) {\n                    result += '\\n<dl>\\n';\n                    if (node.parameters) {\n                        result +=\n                            '\\n<dt>\\n' +\n                            node.parameters\n                                .map((param) => {\n                                    let r =\n                                        '<strong><var>' +\n                                        param.name +\n                                        '</var></strong>';\n                                    const typeDef = render(param.type, 'block');\n                                    if (typeDef) {\n                                        r += punct(': ') + typeDef;\n                                    }\n                                    r += '\\n</dt><dd>\\n';\n                                    r += renderComment(param);\n                                    return r;\n                                })\n                                .join('\\n</dd><dt>\\n');\n                        result += '\\n</dd>\\n';\n                    }\n                    if (node.type) {\n                        result += '\\n<dt>\\n';\n                        result += '<strong>→ </strong>' + render(node.type);\n                        result += '\\n</dt><dd>\\n';\n                        if (node.comment && node.comment.returns) {\n                            result += renderNotices(node, node.comment.returns);\n                        }\n                        result += '\\n</dd>\\n';\n                    }\n                    result += '\\n</dl>\\n';\n                }\n            } else {\n                console.error('Call signature style not supported');\n            }\n            break;\n\n        case 8192: // Index signature\n            // E.g. \"[key: string]\" in \"{[key: string]}\"\n            result +=\n                punct('[') +\n                node.parameters.map((x) => render(x)).join(punct(', ')) +\n                punct(']');\n            result += punct(': ') + render(node.type);\n            break;\n\n        // case 16384: // Constructor signature\n        // console.warn('Unexpected kind ', node.kind);\n        // break;\n\n        case 32768: // Parameter\n            // E.g. \"foo: string\" in \"[foo: string]: string\"\n            // Also \"a:T\" in \"f(a:T)\"\n            if (hasFlag(node, 'isRest')) {\n                result += span('...', 'modifier');\n            }\n            result += `<var>${node.name}</var>`;\n            if (hasFlag(node, 'isOptional')) {\n                result += span('?', 'modifier');\n            }\n            result += punct(': ') + render(node.type);\n            break;\n\n        case 65536: // Type literal\n            // e.g. '{...}' or  '(x: string) => boolean'\n            if (node.signatures) {\n                result += node.signatures\n                    .map((x) => render(x))\n                    .join(punct('; '));\n            } else if (node.children || node.indexSignature) {\n                // E.g. `{ p: T; q: U }`\n                if (style === 'block') {\n                    result += punct('{') + '<div><dl class=\"inset\">';\n                    if (node.children) {\n                        result +=\n                            '<dt>' +\n                            node.children\n                                .map((x) => {\n                                    let dt = render(x) + punct(';');\n                                    if (hasTag(x, 'deprecated')) {\n                                        dt = span(dt, 'deprecated');\n                                    }\n                                    const dd =\n                                        renderFlags(x) + renderComment(x);\n                                    return dt + '</dt><dd>' + dd;\n                                })\n                                .join('</dd><dt>');\n                        result += '</dd>';\n                    }\n                    if (node.indexSignature) {\n                        result += '<dt>';\n                        result += node.indexSignature\n                            .map((x) => render(x))\n                            .join(punct(';') + '</dt><dd>');\n                        result += '</dd>';\n                    }\n                    result += '</dl>' + punct('}') + '</div>';\n                } else if (style === 'inline') {\n                    result += punct('{');\n                    if (node.children) {\n                        result += node.children\n                            .map((x) => render(x))\n                            .join(punct('; '));\n                    }\n                    if (node.indexSignature) {\n                        result += node.indexSignature\n                            .map((x) => render(x))\n                            .join(punct('; '));\n                    }\n                    result += punct('}');\n                } else {\n                    console.error('Unexpected style for Type Literal');\n                }\n            }\n            break;\n\n        case 131072: // Type parameter\n            result += node.name;\n            if (node.type) {\n                result += span(' extends ', 'keyword');\n                result += render(node.type);\n            }\n            break;\n        case 524288: // Get signature\n        case 1048576: // Set signature\n            // The signature for the get/set should never be rendered.\n            // They are aggregated in their parent 'Accessor' node\n            console.warn('Unexpected kind ', node.kind);\n            break;\n        case 262144: // Accessor (get/set)\n            if (style === 'card' || style === 'section') {\n                result = renderAccessorCard(node);\n            } else {\n                console.warn('Unexpected style, kind ', node.kind);\n            }\n            break;\n        case 2097152: // Object literal\n            console.warn('Unexpected style, kind ', node.kind);\n            break;\n\n        case 4194304: // Type Alias\n            // e.g. 'type foo = string';\n            if (style === 'card' || style === 'section') {\n                result = renderTypeAliasCard(node);\n            } else {\n                let def = render(node.type, style);\n                result = node.name;\n                if (node.typeParameter) {\n                    result += punct('<');\n                    result += node.typeParameter\n                        .map((typeParam) => render(typeParam))\n                        .join(punct(', '));\n                    result += punct('>');\n                }\n                if (def) {\n                    result +=\n                        punct(' = ') +\n                        renderPermalink(makePermalink(node.type), def);\n                }\n            }\n            break;\n\n        case 8388608: // Event\n            console.warn('Unexpected style, kind ', node.kind);\n            break;\n\n        default:\n            console.warn('Unexpected kind ', node.kind);\n    }\n\n    return result;\n}\n\nlet gNodes: Reflection = {};\n\nfunction getReflectionsFromFile(src: string[]): Reflection {\n    src = src.map((x) => path.resolve(path.normalize(x)));\n    let result = {};\n    const app = new TypeDoc.Application();\n\n    // If you want TypeDoc to load tsconfig.json / typedoc.json files\n    app.options.addReader(new TypeDoc.TSConfigReader());\n    app.options.addReader(new TypeDoc.TypeDocReader());\n\n    app.bootstrap({\n        logger: (message, _level, _newline) => console.log(message),\n        mode: 'file', // or 'file', 'modules' or 'library'\n\n        target: 'es2017',\n        module: 'ESNext',\n        experimentalDecorators: true,\n        moduleResolution: 'node', // To properly resolve 'import' statements\n\n        includeDeclarations: true, // To process .d.ts files\n        excludeExternals: true, // To exclude references from external files\n    });\n\n    const convertResult = app.converter.convert(src);\n    if (convertResult.errors && convertResult.errors.length) {\n        // this.logger.diagnostics(convertResult.errors);\n        // if (this.ignoreCompilerErrors) {\n        // this.logger.resetErrors();\n        // } else {\n        console.error(\n            convertResult.errors.map((x) => x.messageText).join('\\n')\n        );\n        return {};\n        // }\n    }\n\n    if (convertResult.project) {\n        result = app.serializer.projectToObject(convertResult.project);\n    }\n\n    return result as Reflection;\n}\n\nfunction applyTemplate(\n    src: string,\n    substitutions: { [key: string]: string }\n): string {\n    Object.keys(substitutions).forEach((key) => {\n        src = src.replace(\n            new RegExp('{{' + key + '}}', 'g'),\n            substitutions[key]\n        );\n    });\n    return src;\n}\n\n/**\n *  Main entry point\n *\n */\n\nexport function grok(\n    src: string[],\n    options: Options\n): { [file: string]: string } {\n    try {\n        gNodes = getReflectionsFromFile(src);\n\n        let apiName = options.apiName;\n\n        const packages = gNodes.groups?.filter((x) => (x.kind & 3) !== 0);\n        // packages = modules or namespaces\n        const mainPackage =\n            packages &&\n            packages[0] &&\n            packages[0].children[0] &&\n            getReflectionByID(packages[0].children[0]);\n        if (!apiName && mainPackage) apiName = mainPackage.name;\n        if (apiName) {\n            if (apiName.startsWith('\"') && apiName.endsWith('\"'))\n                apiName = apiName.substring(1, apiName.length - 2);\n            if (apiName.endsWith('.d')) apiName = apiName.substring(2);\n        }\n        const packageName = apiName || gNodes.name || '';\n\n        const content = render(gNodes, 'section');\n        if (content) {\n            const document = applyTemplate(options.documentTemplate, {\n                packageName: escapeYAMLString(packageName),\n                apiName: escapeYAMLString(trimNewline(apiName || '')),\n                content,\n            });\n            return { [options?.outFile ?? 'index.html']: document };\n        }\n    } catch (err) {\n        console.error(err);\n    }\n    return {};\n}\n","const chalk = require('chalk');\nconst ciInfo = require('ci-info');\n\n//\n// Terminal colors for various kind of messages\n//\nconst tcOrange = '#ffcc00';\nconst tcRed = '#fa2040';\nconst tcBlue = '#6ab3ff';\nconst tcPurple = '#d1d7ff';\n\n/** Do not use fancy color output if the output stream is not a terminal\n * (e.g. if we're redirecting errors to a log file) or when in a CI environment.\n * Note that the debug console in VSCode returns 'undefined' for isTTY.\n */\nlet gUseColor = (process.stdout.isTTY ?? false) && !ciInfo.isCI;\n\nexport const terminal = {\n    useColor: (flag: boolean): void => {\n        gUseColor = flag;\n    },\n    autoFormat: (m: string): string => {\n        return m\n            .replace(/(\"(.*)\")/g, (x) => {\n                return terminal.string(x.slice(1, -1));\n            })\n            .replace(/(`(.*)`)/g, (x) => {\n                return terminal.keyword(x);\n            });\n    },\n    success: (m = ''): string => {\n        chalk.green('✔︎   ' + m);\n        return gUseColor ? chalk.bold.green('✔︎   ' + m) : '✔︎   ' + m;\n    },\n    error: (m = ''): string => {\n        return gUseColor\n            ? chalk.hex(tcRed)(chalk.bold('✘   ' + m))\n            : '✘   ' + m;\n    },\n    warning: (m = ''): string => {\n        return gUseColor\n            ? chalk.hex(tcOrange)(chalk.bold('⚠️   ' + m))\n            : '⚠   ' + m;\n    },\n    path: (m = ''): string => {\n        return gUseColor ? chalk.hex(tcBlue).italic(m) : m;\n    },\n    keyword: (m = ''): string => {\n        return gUseColor ? chalk.hex(tcOrange)(m) : m;\n    },\n    string: (m = ''): string => {\n        return gUseColor\n            ? chalk.hex(tcOrange)('\"' + chalk.italic(m) + '\"')\n            : '\"' + m + '\"';\n    },\n    dim: (m = ''): string => {\n        return gUseColor ? chalk.hex('#999')(m) : m;\n    },\n    time: (t = new Date()): string => {\n        return gUseColor\n            ? chalk.hex(tcPurple)(`[${t.toLocaleTimeString()}]`)\n            : '[' + t + ']';\n    },\n    link: (m: string): string => {\n        return gUseColor\n            ? '\\n▷   ' +\n                  chalk.hex(tcPurple)(\n                      'https://github.com/arnog/chromatic/docs/errors/' +\n                          m +\n                          '.md'\n                  )\n            : '\\n▷   https://github.com/arnog/chromatic/docs/errors/' +\n                  m +\n                  '.md';\n    },\n};\n","const pkg = require('./package.json');\nrequire('please-upgrade-node')(pkg);\n\nconst updateNotifier = require('update-notifier');\n// Display an update message\n// if a more recent version of the package is available.\nupdateNotifier({ pkg, shouldNotifyInNpmScript: true }).notify();\n\nconst { cosmiconfigSync } = require('cosmiconfig');\nconst configParser = cosmiconfigSync('grok');\nconst path = require('path');\nconst fs = require('fs-extra');\n\nimport { grok } from './grok';\nimport { terminal } from './terminal';\n\n/**\n * Merge \"source\" into object by doing a deep copy of enumerable properties.\n */\nfunction mergeObject(object: object, source: object): object {\n    if (object === source) return;\n    if (!source) return;\n    Object.keys(source).forEach((key) => {\n        if (Array.isArray(source[key])) {\n            if (!object[key]) object[key] = [];\n            object[key] = [...object[key], ...source[key]];\n        } else if (typeof source[key] === 'object') {\n            // Object literal\n            if (!object[key]) object[key] = {};\n            mergeObject(object[key], source[key]);\n        } else if (typeof source[key] !== 'undefined') {\n            object[key] = source[key];\n        }\n    });\n}\n\nfunction outputResult(\n    outDir: string,\n    result: { [file: string]: string }\n): void {\n    fs.mkdir(outDir, { recursive: true });\n    Object.keys(result).forEach((x) => {\n        fs.writeFileSync(\n            path.resolve(path.normalize(path.join(outDir, x))),\n            result[x]\n        );\n    });\n}\n\nfunction build(argv): void {\n    try {\n        let options = {\n            apiName: 'module',\n            verbose: false,\n            documentTemplate: `---\npermalink: \"/docs/{{apiName}}/\"\ntitle: \"{{packageName}}\"\nread_time: false\nlayout: \"api-layout\"\nsidebar:\n    - nav: \"{{apiName}}\"\n# toc: true\n---\n<svg xmlns=\"http://www.w3.org/2000/svg\" style=\"display:none\">\n<defs>\n    <symbol id='link' viewBox=\"0 0 512 512\" >\n        <path fill=\"currentColor\" d=\"M326.612 185.391c59.747 59.809 58.927 155.698.36 214.59-.11.12-.24.25-.36.37l-67.2 67.2c-59.27 59.27-155.699 59.262-214.96 0-59.27-59.26-59.27-155.7 0-214.96l37.106-37.106c9.84-9.84 26.786-3.3 27.294 10.606.648 17.722 3.826 35.527 9.69 52.721 1.986 5.822.567 12.262-3.783 16.612l-13.087 13.087c-28.026 28.026-28.905 73.66-1.155 101.96 28.024 28.579 74.086 28.749 102.325.51l67.2-67.19c28.191-28.191 28.073-73.757 0-101.83-3.701-3.694-7.429-6.564-10.341-8.569a16.037 16.037 0 0 1-6.947-12.606c-.396-10.567 3.348-21.456 11.698-29.806l21.054-21.055c5.521-5.521 14.182-6.199 20.584-1.731a152.482 152.482 0 0 1 20.522 17.197zM467.547 44.449c-59.261-59.262-155.69-59.27-214.96 0l-67.2 67.2c-.12.12-.25.25-.36.37-58.566 58.892-59.387 154.781.36 214.59a152.454 152.454 0 0 0 20.521 17.196c6.402 4.468 15.064 3.789 20.584-1.731l21.054-21.055c8.35-8.35 12.094-19.239 11.698-29.806a16.037 16.037 0 0 0-6.947-12.606c-2.912-2.005-6.64-4.875-10.341-8.569-28.073-28.073-28.191-73.639 0-101.83l67.2-67.19c28.239-28.239 74.3-28.069 102.325.51 27.75 28.3 26.872 73.934-1.155 101.96l-13.087 13.087c-4.35 4.35-5.769 10.79-3.783 16.612 5.864 17.194 9.042 34.999 9.69 52.721.509 13.906 17.454 20.446 27.294 10.606l37.106-37.106c59.271-59.259 59.271-155.699.001-214.959z\">\n        </path>\n    </symbol>\n    <symbol id='external-link' viewBox=\"0 0 512 512\">\n        <path fill=\"currentColor\" d=\"M432,320H400a16,16,0,0,0-16,16V448H64V128H208a16,16,0,0,0,16-16V80a16,16,0,0,0-16-16H48A48,48,0,0,0,0,112V464a48,48,0,0,0,48,48H400a48,48,0,0,0,48-48V336A16,16,0,0,0,432,320ZM474.67,0H316a28,28,0,0,0-28,28V46.71A28,28,0,0,0,316.79,73.9L384,72,135.06,319.09l-.06.06a24,24,0,0,0,0,33.94l23.94,23.85.06.06a24,24,0,0,0,33.91-.09L440,128l-1.88,67.22V196a28,28,0,0,0,28,28H484a28,28,0,0,0,28-28V37.33h0A37.33,37.33,0,0,0,474.67,0Z\">\n        </path>\n    </symbol>\n</defs>\n</svg>\n{{content}}`,\n        };\n\n        //\n        // 1. Load from 'standard' config locations\n        //\n        let configResult = configParser.search();\n        if (!!configResult?.config) {\n            mergeObject(options, configResult.config);\n        }\n\n        //\n        // 2. If a config file is specified, merge with previous config\n        //\n        if (argv['config']) {\n            configResult = configParser.load(argv['config']);\n            if (!!configResult?.config) {\n                mergeObject(options, configResult.config);\n            }\n        }\n\n        //\n        // 3. If command-line options are specified, merge with previous config\n        //\n\n        mergeObject(options, argv);\n\n        //\n        // 4. Process the command\n        //\n        if (!argv['paths'] || argv['paths'].length < 1) {\n            console.error(\n                terminal.error() +\n                    `Expected at least one path to a directory or TypeScript declaration file.\\n` +\n                    `    Use ${terminal.keyword(\n                        argv.$0 + ' help'\n                    )} for available options.\\n`\n            );\n            process.exit(1);\n        }\n\n        outputResult(options['outDir'] || '.', grok(argv['paths'], options));\n    } catch (err) {\n        console.error(err);\n    }\n}\n\nfunction buildOptions(yargs): void {\n    yargs\n        .positional('<path>', {\n            describe: 'Path to a TypeScript declaration file or directory',\n            type: 'path',\n        })\n        .normalize('path')\n        .option('outFile', {\n            describe: 'Save output to file (in outDir)',\n            type: 'path',\n        })\n        .normalize('outFile')\n        .option('outDir', {\n            alias: 'o',\n            describe: 'Save output to path',\n            type: 'path',\n        })\n        .normalize('outDir')\n        .option('config', {\n            describe: 'Load config file from path',\n            type: 'path',\n        })\n        .normalize('config')\n        .option('verbose', {\n            describe: 'Display additional information during processing',\n            type: 'boolean',\n        })\n        .option('no-color', {\n            describe: 'Suppress color output in terminal',\n            type: 'boolean',\n        })\n        .option('ignore-errors', {\n            alias: 'i',\n            describe: 'Attempt to continue when an error is encountered',\n            type: 'boolean',\n        });\n}\n\nrequire('yargs')\n    .usage('Usage: $0 file(s) [options]')\n    .example(\n        '$0 ./src/index.d.ts -o ./build/index.html',\n        'Generate a HTML documentation page from a TypeScript declaration file'\n    )\n    .command(\n        ['* <paths..>', 'build <paths..>'],\n        'Build documentation',\n        buildOptions,\n        build\n    )\n    .command(\n        'help',\n        'Show help',\n        () => {\n            return;\n        },\n        (yargs) => yargs.help()\n    )\n\n    .help('h')\n    .alias('h', 'help')\n    .epilog('For more information, see https://github.com/ui-js/grok')\n    .strict(true).argv;\n"],"names":["path"],"mappings":";;;AACA,MAAM,OAAO,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC;AAEnC,MAAM,WAAW,GAAG,OAAO,CAAC,cAAc,CAAC,CAAC;AAC5C,MAAM,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;AAE7B,MAAM,UAAU,GAAG,OAAO,CAAC,aAAa,CAAC,CAAC;AAC1C,MAAM,QAAQ,GAAG,IAAI,UAAU,CAAC;IAE5B,IAAI,EAAE,IAAI;IACV,WAAW,EAAE,IAAI;IACjB,SAAS,EAAE,UAAU,GAAG,EAAE,IAAI;QAC1B,IAAI,CAAC,IAAI,aAAJ,IAAI,cAAJ,IAAI,GAAI,YAAY,KAAK,WAAW,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE;YACzD,IAAI;gBACA,OAAO,WAAW,CAAC,SAAS,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,KAAK,CAAC;aACjD;YAAC,OAAO,GAAG,EAAE;gBACV,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;aACpB;SACJ;QAED,OAAO,EAAE,CAAC;KACb;CACJ,CAAC,CAAC;AAkBH,SAAS,IAAI,CACT,KAAa,EACb,SASQ;IAER,IAAI,CAAC,SAAS;QAAE,OAAO,KAAK,CAAC;IAC7B,OAAO,eAAe,GAAG,SAAS,GAAG,IAAI,GAAG,KAAK,GAAG,SAAS,CAAC;AAClE,CAAC;AAED,SAAS,KAAK,CAAC,KAAa;IACxB,OAAO,sBAAsB,GAAG,KAAK,GAAG,SAAS,CAAC;AACtD,CAAC;AAOD,SAAS,iBAAiB,CAAC,EAAU,EAAE,IAAI,GAAG,MAAM;IAGhD,IAAI,IAAI,CAAC,IAAI,KAAK,WAAW,IAAI,IAAI,CAAC,EAAE,KAAK,EAAE;QAAE,OAAO,IAAI,CAAC;IAC7D,IAAI,MAAM,CAAC;IACX,IAAI,CAAC,QAAQ;QACT,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;YACjB,MAAM,GAAG,iBAAiB,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;YAClC,OAAO,MAAM,KAAK,SAAS,CAAC;SAC/B,CAAC,CAAC;IACP,OAAO,MAAM,CAAC;AAClB,CAAC;AAED,SAAS,oBAAoB,CAAC,IAAY,EAAE,IAAK;IAC7C,IAAI,CAAC,IAAI;QAAE,IAAI,GAAG,MAAM,CAAC;IACzB,IAAI,MAAM,GAAG,EAAE,CAAC;IAChB,IAAI,IAAI,CAAC,IAAI,KAAK,IAAI;QAAE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC1C,IAAI,IAAI,CAAC,QAAQ,EAAE;QACf,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC;YACpB,MAAM,GAAG,CAAC,GAAG,MAAM,EAAE,GAAG,oBAAoB,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC;SAC1D,CAAC,CAAC;KACN;IACD,OAAO,MAAM,CAAC;AAClB,CAAC;AAMD,SAAS,mBAAmB,CAAC,IAAY,EAAE,IAAK,EAAE,IAAK;IACnD,IAAI,UAAU,GAAG,EAAE,CAAC;IACpB,UAAU,GAAG,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;IAC9C,IAAI,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE;QACvB,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC;QAC3C,IAAI,OAAO,IAAI,KAAK,QAAQ,EAAE;YAC1B,UAAU,GAAG,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,GAAG,IAAI,MAAM,CAAC,CAAC,CAAC;SAChE;aAAM,IAAI,IAAI,KAAK,QAAQ,EAAE;YAC1B,UAAU,GAAG,UAAU,CAAC,MAAM,CAC1B,CAAC,CAAC,KAAK,CAAC,CAAC,IAAI,KAAK,IAAI,IAAI,OAAO,CAAC,CAAC,EAAE,UAAU,CAAC,CACnD,CAAC;SACL;aAAM,IAAI,OAAO,IAAI,KAAK,QAAQ,EAAE;YACjC,MAAM,OAAO,GAAG,YAAY,CAAC,IAAI,CAAC,CAAC;YACnC,UAAU,GAAG,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,GAAG,OAAO,MAAM,CAAC,CAAC,CAAC;SACnE;QACD,IAAI,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE;YACvB,OAAO,UAAU,CAAC,CAAC,CAAC,CAAC;SACxB;KACJ;IACD,OAAO,IAAI,CAAC;AAChB,CAAC;AAED,MAAM,YAAY,GAAG;IACjB,SAAS,EAAE,CAAC;IACZ,IAAI,EAAE,CAAC;IACP,QAAQ,EAAE,EAAE;IACZ,QAAQ,EAAE,EAAE;IACZ,KAAK,EAAE,GAAG;IACV,SAAS,EAAE,GAAG;IACd,QAAQ,EAAE,IAAI,GAAG,IAAI,GAAG,MAAM;IAC9B,MAAM,EAAE,IAAI,GAAG,IAAI;IACnB,IAAI,EAAE,OAAO;CAChB,CAAC;AAEF,SAAS,eAAe,CAAC,OAAe;IACpC,MAAM,CAAC,GAAG,OAAO,CAAC,KAAK,CAAC,6BAA6B,CAAC,CAAC;IACvD,IAAI,CAAC,EAAE;QACH,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;KACvB;IACD,OAAO,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC;AAChC,CAAC;AAcD,SAAS,mBAAmB,CAAC,IAAY,EAAE,IAAK;IAC5C,MAAM,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IACjC,IAAI,QAAQ,CAAC,MAAM,KAAK,CAAC,EAAE;QAEvB,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,GAAG,eAAe,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;QAClD,QACI,mBAAmB,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC;YACrC,mBAAmB,CAAC,IAAI,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC;YAChD,mBAAmB,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,EACvC;KACL;IAED,MAAM,WAAW,GAAG,QAAQ,CAAC,GAAG,EAAE,CAAC;IACnC,IAAI,IAAI,GAAG,IAAI,CAAC;IAChB,KAAK,MAAM,OAAO,IAAI,QAAQ,EAAE;QAE5B,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,GAAG,eAAe,CAAC,OAAO,CAAC,CAAC;QAC9C,IAAI,GAAG,mBAAmB,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;KAChD;IACD,OAAO,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;AAClD,CAAC;AAOD,SAAS,YAAY,CAAC,IAAI,EAAE,IAAI,GAAG,MAAM;IACrC,IAAI,CAAC,IAAI;QAAE,OAAO,IAAI,CAAC;IACvB,IAAI,IAAI,CAAC,EAAE,KAAK,IAAI,CAAC,EAAE;QAAE,OAAO,CAAC,IAAI,CAAC,CAAC;IACvC,IAAI,IAAI,CAAC,QAAQ,EAAE;QACf,KAAK,MAAM,KAAK,IAAI,IAAI,CAAC,QAAQ,EAAE;YAC/B,IAAI,SAAS,GAAG,YAAY,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;YAC1C,IAAI,SAAS,EAAE;gBACX,OAAO,CAAC,GAAG,SAAS,EAAE,IAAI,CAAC,CAAC;aAC/B;SACJ;KACJ;IACD,OAAO,IAAI,CAAC;AAChB,CAAC;AAED,SAAS,SAAS,CAAC,IAAI;IACnB,IAAI,SAAS,GAAG,YAAY,CAAC,IAAI,CAAC,CAAC;IACnC,IAAI,SAAS;QAAE,OAAO,SAAS,CAAC,CAAC,CAAC,CAAC;IACnC,OAAO,IAAI,CAAC;AAChB,CAAC;AAKD,SAAS,eAAe,CAAC,IAAI,EAAE,QAAQ;IACnC,OAAO,QAAQ,CAAC,GAAG,CACf,CAAC,CAAC,KAAK,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,KAAK,KAAK,KAAK,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAC5D,CAAC;AACN,CAAC;AAED,SAAS,OAAO,CAAC,IAAI;IACjB,IAAI,IAAI,CAAC,IAAI,KAAK,CAAC,EAAE;QACjB,OAAO,aAAa,CAAC,IAAI,CAAC,CAAC;KAC9B;IACD,OAAO,IAAI,CAAC,IAAI,CAAC;AACrB,CAAC;AAED,SAAS,kBAAkB,CAAC,KAAK;IAC7B,OAAO,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,IAAI,KAAK,eAAe,CAAC,CAAC;AAC1D,CAAC;AAED,SAAS,sBAAsB,CAAC,UAAU;IACtC,OAAO,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC;QACxB,IAAI,CAAC,CAAC,KAAK,KAAK,CAAC,CAAC,KAAK;YAAE,OAAO,CAAC,CAAC;QAClC,IAAI,CAAC,CAAC,KAAK,KAAK,OAAO;YAAE,OAAO,CAAC,CAAC;QAClC,IAAI,CAAC,CAAC,KAAK,KAAK,OAAO;YAAE,OAAO,CAAC,CAAC,CAAC;QACnC,OAAO,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,KAAK,CAAC;KAC5B,CAAC,CAAC;AACP,CAAC;AAED,MAAM,UAAU,GAAG;IACf,GAAG,EAAE,CAAC;IAEN,EAAE,EAAE,CAAC;IACL,IAAI,EAAE,CAAC;IACP,MAAM,EAAE,CAAC;IAET,IAAI,EAAE,CAAC;IACP,EAAE,EAAE,CAAC;IAEL,GAAG,EAAE,CAAC;IACN,GAAG,EAAE,CAAC;IAEN,OAAO,EAAE,CAAC;IACV,CAAC,EAAE,EAAE;CACR,CAAC;AAEF,SAAS,UAAU,CAAC,MAAM;IACtB,OAAO,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC;QACpB,OAAO,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;QACzD,OAAO,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC;cAC1C,CAAC;cACD,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC;kBACvC,CAAC,CAAC;kBACF,CAAC,CAAC,CAAC;KACZ,CAAC,CAAC;AACP,CAAC;AAUD,SAAS,aAAa,CAAC,IAAI,EAAE,IAAI;IAC7B,IAAI,MAAM,GAAG,EAAE,CAAC;IAChB,IAAI,QAAQ,GAAG,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,IAAI,KAAK,IAAI,CAAC,CAAC;IACzE,IAAI,CAAC,QAAQ,IAAI,QAAQ,CAAC,MAAM,KAAK,CAAC,EAAE;QAEpC,IAAI,IAAI,CAAC,UAAU,EAAE;YACjB,OAAO,sBAAsB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;SAClD;QACD,OAAO,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,IAAI,KAAK,IAAI,CAAC,CAAC;KACvD;IACD,IAAI,QAAQ,CAAC,CAAC,CAAC,CAAC,UAAU,EAAE;QACxB,MAAM,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,QAAQ;YACzC,OAAO;gBACH,KAAK,EAAE,QAAQ,CAAC,KAAK;gBACrB,QAAQ,EAAE,eAAe,CAAC,IAAI,EAAE,QAAQ,CAAC,QAAQ,CAAC;aACrD,CAAC;SACL,CAAC,CAAC;QACH,MAAM,GAAG,sBAAsB,CAAC,MAAM,CAAC,CAAC;KAC3C;SAAM;QAEH,MAAM,GAAG;YACL;gBACI,KAAK,EAAE,EAAE;gBACT,QAAQ,EAAE,eAAe,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC;aACxD;SACJ,CAAC;KACL;IACD,OAAO,MAAM,CAAC;AAClB,CAAC;AA0BD,SAAS,aAAa,CAAC,IAAI;IACvB,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,KAAK,CAAC,EAAE;QAE1B,OAAO,EAAE,MAAM,EAAE,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;KAClD;IACD,MAAM,MAAM,GAAG,SAAS,CAAC,IAAI,CAAC,CAAC;IAC/B,IAAI,CAAC,MAAM,EAAE;QAIT,OAAO,EAAE,MAAM,EAAE,IAAI,CAAC,IAAI,IAAI,EAAE,EAAE,KAAK,EAAE,IAAI,CAAC,IAAI,IAAI,EAAE,EAAE,CAAC;KAC9D;IACD,IAAI,MAAM,CAAC;IACX,IAAI,IAAI,CAAC,IAAI,KAAK,GAAG,EAAE;QAEnB,IAAI,oBAAoB,GAAG,aAAa,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC;QAC5D,IAAI,oBAAoB,EAAE;YACtB,MAAM,GAAG;gBACL,MAAM,EACF,CAAC,oBAAoB,CAAC,MAAM;sBACtB,oBAAoB,CAAC,MAAM,GAAG,GAAG;sBACjC,EAAE;oBACR,MAAM,CAAC,IAAI;oBACX,cAAc;gBAClB,KAAK,EAAE,MAAM,GAAG,MAAM,CAAC,IAAI,GAAG,IAAI;aACrC,CAAC;SACL;aAAM;YACH,MAAM,GAAG;gBACL,MAAM,EAAE,MAAM,CAAC,IAAI,GAAG,cAAc;gBACpC,KAAK,EAAE,MAAM,GAAG,MAAM,CAAC,IAAI,GAAG,IAAI;aACrC,CAAC;SACL;KACJ;SAAM;QACH,MAAM,eAAe,GAAG,kBAAkB,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;QACzD,MAAM,eAAe,GAAG,aAAa,CAAC,MAAM,CAAC,CAAC;QAC9C,IAAI,QAAQ,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC;QAC7B,MAAM,GAAG,eAAe;cAClB;gBACI,MAAM,EACF,CAAC,eAAe,CAAC,MAAM;sBACjB,eAAe,CAAC,MAAM,GAAG,GAAG;sBAC5B,EAAE,IAAI,eAAe;gBAC/B,KAAK,EAAE,eAAe,CAAC,KAAK,GAAG,GAAG,GAAG,QAAQ;aAChD;cACD;gBACI,MAAM,EAAE,eAAe;gBACvB,KAAK,EAAE,QAAQ;aAClB,CAAC;KACX;IACD,IAAI,YAAY,CAAC,IAAI,CAAC,EAAE;QACpB,MAAM,CAAC,MAAM,GAAG,EAAE,CAAC;KACtB;IACD,OAAO,MAAM,CAAC;AAClB,CAAC;AASD,SAAS,eAAe,CACpB,SAIC,EACD,KAAc;IAEd,KAAK,GAAG,KAAK,IAAI,SAAS,CAAC,KAAK,CAAC;IACjC,IAAI,SAAS,CAAC,QAAQ,IAAI,SAAS,CAAC,MAAM,EAAE;QAExC,OAAO,YAAY,SAAS,CAAC,QAAQ,IAAI,kBAAkB,CACvD,SAAS,CAAC,MAAM,CACnB,KAAK,KAAK,MAAM,CAAC;KACrB;SAAM,IAAI,SAAS,CAAC,QAAQ,EAAE;QAE3B,OAAO,YAAY,SAAS,CAAC,QAAQ,MAAM,KAAK,MAAM,CAAC;KAC1D;SAAM,IAAI,SAAS,CAAC,MAAM,EAAE;QAEzB,OAAO,aAAa,kBAAkB,CAClC,SAAS,CAAC,MAAM,CACnB,KAAK,KAAK,MAAM,CAAC;KACrB;IACD,OAAO,KAAK,CAAC;AACjB,CAAC;AAMD,SAAS,qBAAqB,CAAC,SAAS;IAGpC,OAAO,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;IAEpC,QACI,8BAA8B;QAC9B,kBAAkB,CAAC,SAAS,CAAC,MAAM,CAAC;QACpC,4DAA4D;QAC5D,2CAA2C;QAC3C,MAAM,EACR;AACN,CAAC;AAeD,SAAS,WAAW,CAAC,IAAI,EAAE,KAAM,EAAE,UAAW,EAAE,OAAQ;IACpD,IAAI,CAAC,UAAU,IAAI,UAAU,CAAC,MAAM,KAAK,CAAC;QAAE,OAAO,EAAE,CAAC;IACtD,IAAI,MAAM,GAAG,EAAE,CAAC;IAChB,IAAI,KAAK,EAAE;QACP,MAAM,IAAI,UAAU,CAAC;QACrB,MAAM,IAAI,MAAM,GAAG,gBAAgB,CAAC,IAAI,CAAC,GAAG,OAAO,CAAC;QACpD,MAAM,IAAI,GAAG,KAAK,SAAS,CAAC;KAC/B;IAGD,IAAI,UAAU,CAAC,MAAM,KAAK,CAAC,IAAI,UAAU,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,MAAM,IAAI,CAAC,EAAE;QAC/D,OAAO,MAAM,CAAC;KACjB;IAED,OAAO,GAAG,OAAO,IAAI,EAAE,YAAY,EAAE,EAAE,EAAE,CAAC;IAE1C,QACI,MAAM;QACN,UAAU;aACL,GAAG,CAAC,CAAC,QAAQ;YACV,IAAI,CAAC,GAAG,EAAE,CAAC;YACX,IAAI,QAAQ,CAAC,KAAK,EAAE;gBAChB,CAAC,IAAI,WAAW,QAAQ,CAAC,KAAK,SAAS,CAAC;aAC3C;YACD,CAAC,IAAI,+BAA+B,CAAC;YACrC,CAAC,IAAI,QAAQ,CAAC,QAAQ;iBACjB,GAAG,CAAC,CAAC,CAAC;gBAEH,IAAI,OAAO,CAAC,KAAK,QAAQ;oBAAE,CAAC,GAAG,iBAAiB,CAAC,CAAC,CAAC,CAAC;gBACpD,OAAO,eAAe,CAClB,aAAa,CAAC,CAAC,CAAC,EAChB,CAAC,CAAC,IAAI,GAAG,OAAO,CAAC,YAAY,CAChC,CAAC;aACL,CAAC;iBACD,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;iBAClB,IAAI,CAAC,aAAa,CAAC,CAAC;YACzB,CAAC,IAAI,oBAAoB,CAAC;YAC1B,OAAO,CAAC,CAAC;SACZ,CAAC;aACD,IAAI,CAAC,IAAI,CAAC,EACjB;AACN,CAAC;AAID,SAAS,OAAO,CAAC,IAAI,EAAE,IAAI;IACvB,OAAO,IAAI,IAAI,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;AAClD,CAAC;AAID,SAAS,MAAM,CAAC,IAAI,EAAE,GAAG;IACrB,IAAI,IAAI,IAAI,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE;QAC3C,IAAI,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,GAAG,CAAC,CAAC;QAE5D,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,IAAI,CAAC,CAAC,CAAC;QACnC,IAAI,MAAM,CAAC,MAAM,KAAK,CAAC,EAAE;YACrB,OAAO,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,EAAE,CAAC;SAC/B;KACJ;IACD,OAAO,EAAE,CAAC;AACd,CAAC;AAMD,SAAS,MAAM,CAAC,IAAI,EAAE,GAAG;IACrB,QACI,IAAI;QACJ,IAAI,CAAC,OAAO;QACZ,IAAI,CAAC,OAAO,CAAC,IAAI;QACjB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,GAAG,CAAC,CAAC,MAAM,GAAG,CAAC,EAC3D;AACN,CAAC;AAED,SAAS,WAAW,CAAC,IAAI,EAAE,KAAK,GAAG,OAAO;IACtC,IAAI,CAAC,IAAI;QAAE,OAAO,EAAE,CAAC;IACrB,IAAI,MAAM,GAAG,EAAE,CAAC;IAChB,IAAI,IAAI,CAAC,KAAK,EAAE;QACZ,IAAI,IAAI,CAAC,KAAK,CAAC,UAAU;YAAE,MAAM,IAAI,IAAI,CAAC,UAAU,EAAE,cAAc,CAAC,CAAC;QACtE,IAAI,IAAI,CAAC,KAAK,CAAC,SAAS;YAAE,MAAM,IAAI,IAAI,CAAC,SAAS,EAAE,cAAc,CAAC,CAAC;QACpE,IAAI,IAAI,CAAC,KAAK,CAAC,WAAW;YAAE,MAAM,IAAI,IAAI,CAAC,WAAW,EAAE,cAAc,CAAC,CAAC;QACxE,IAAI,IAAI,CAAC,KAAK,CAAC,QAAQ;YAAE,MAAM,IAAI,IAAI,CAAC,QAAQ,EAAE,cAAc,CAAC,CAAC;QAGlE,IAAI,IAAI,CAAC,KAAK,CAAC,UAAU;YAAE,MAAM,IAAI,IAAI,CAAC,UAAU,EAAE,cAAc,CAAC,CAAC;QACtE,IAAI,IAAI,CAAC,KAAK,CAAC,QAAQ;YAAE,MAAM,IAAI,IAAI,CAAC,QAAQ,EAAE,cAAc,CAAC,CAAC;KACrE;IAED,MAAM,IAAI,GAEN;QAEA,aAAa,EAAE,EAAE;QACjB,QAAQ,EAAE,EAAE;QAIZ,QAAQ,EAAE,EAAE;QACZ,MAAM,EAAE,EAAE;QACV,OAAO,EAAE,EAAE;QACX,UAAU,EAAE,kBAAkB;QAE9B,IAAI,EAAE,qBAAqB;QAC3B,KAAK,EAAE,qBAAqB;QAC5B,YAAY,EAAE,qBAAqB;KACtC,CAAC;IACF,MAAM,QAAQ,GAAG;QACb,aAAa,EAAE,OAAO;QACtB,QAAQ,EAAE,WAAW;KACxB,CAAC;IACF,MAAM,IAAI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC;SACtB,GAAG,CAAC,CAAC,CAAC,MAAM,MAAM,CAAC,IAAI,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC;SACpE,IAAI,CAAC,EAAE,CAAC,CAAC;IAEd,OAAO,MAAM;UACP,KAAK,KAAK,OAAO;cACb,qBAAqB,GAAG,MAAM,GAAG,UAAU;cAC3C,sBAAsB,GAAG,MAAM,GAAG,WAAW;UACjD,EAAE,CAAC;AACb,CAAC;AAMD,SAAS,SAAS,CAAC,IAAI,EAAE,GAAG,EAAE,IAAI;IAC9B,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI;QAAE,OAAO,EAAE,CAAC;IAC7B,IAAI,MAAM,GAAG,EAAE,CAAC;IAChB,IAAI,GAAG,WAAW,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,IAAI,EAAE,CAAC;IACtC,QAAQ,GAAG;QACP,KAAK,QAAQ;YACT,MAAM;gBACF,2BAA2B;oBAC3B,QAAQ,CAAC,MAAM,CAAC,cAAc,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC;YAChD,MAAM;QACV,KAAK,QAAQ;YACT,MAAM;gBACF,2BAA2B;oBAC3B,QAAQ,CAAC,MAAM,CAAC,cAAc,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC;YAChD,MAAM;QACV,KAAK,UAAU;YACX,MAAM;gBACF,6BAA6B;oBAC7B,QAAQ,CAAC,MAAM,CAAC,cAAc,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC;YAChD,MAAM;QACV,KAAK,SAAS;YACV,MAAM;gBACF,eAAe;oBACf,WAAW,CAAC,SAAS,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC,KAAK;oBAC/C,iBAAiB,CAAC;YACtB,MAAM;QACV,KAAK,SAAS,CAAC;QACf,KAAK,MAAM,CAAC;QACZ,KAAK,UAAU,CAAC;QAChB,KAAK,OAAO,CAAC;QACb,KAAK,SAAS;YAGV,MAAM;QACV,KAAK,gBAAgB;YAGjB,MAAM;QACV,KAAK,sBAAsB;YAGvB,MAAM;QACV,KAAK,UAAU;YAEX,MAAM;QACV,KAAK,QAAQ;YAET,MAAM;QACV,KAAK,SAAS;YAKV,MAAM;QAEV;YACI,IAAI,IAAI,EAAE;gBACN,MAAM,WAAW,GACb;oBACI,aAAa,EAAE,MAAM;oBACrB,QAAQ,EAAE,MAAM;oBAChB,MAAM,EAAE,MAAM;oBACd,QAAQ,EAAE,MAAM;oBAChB,MAAM,EAAE,MAAM;oBACd,OAAO,EAAE,MAAM;oBACf,KAAK,EAAE,SAAS;oBAChB,IAAI,EAAE,SAAS;oBACf,YAAY,EAAE,SAAS;oBACvB,UAAU,EAAE,QAAQ;oBACpB,QAAQ,EAAE,QAAQ;iBACrB,CAAC,GAAG,CAAC,IAAI,MAAM,CAAC;gBACrB,MAAM,QAAQ,GAAG,EAAE,aAAa,EAAE,OAAO,EAAE,CAAC,GAAG,CAAC,IAAI,GAAG,CAAC;gBAExD,MAAM,IAAI,0BAA0B,GAAG,WAAW,GAAG,MAAM,CAAC;gBAC5D,MAAM;oBACF,MAAM;wBACN,QAAQ;wBACR,WAAW;wBACX,QAAQ,CAAC,MAAM,CAAC,cAAc,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC;gBAChD,MAAM,IAAI,cAAc,CAAC;aAC5B;iBAAM,IACH,CAAC,oGAAoG,CAAC,IAAI,CACtG,GAAG,CACN,EACH;gBACE,MAAM,IAAI,UAAU,GAAG,GAAG,GAAG,WAAW,CAAC;aAG5C;KACR;IACD,OAAO,MAAM,CAAC;AAClB,CAAC;AAED,SAAS,gBAAgB,CAAC,GAAG;IACzB,OAAO,GAAG,CAAC,OAAO,CAAC,WAAW,EAAE,OAAO,CAAC,CAAC;AAC7C,CAAC;AAED,SAAS,UAAU,CAAC,GAAG;IACnB,OAAO,GAAG,CAAC,OAAO,CAAC,YAAY,EAAE,EAAE,CAAC,CAAC;AACzC,CAAC;AAED,SAAS,WAAW,CAAC,GAAG;IACpB,OAAO,GAAG,CAAC,OAAO,CAAC,SAAS,EAAE,EAAE,CAAC,CAAC;AACtC,CAAC;AAuBD,SAAS,kBAAkB,CAAC,MAAM,EAAE,IAAI;IACpC,IAAI,IAAI,CAAC,IAAI,KAAK,CAAC,EAAE;QAEjB,OAAO,EAAE,CAAC;KACb;IACD,IAAI,IAAI,CAAC,IAAI,KAAK,CAAC,EAAE;QAEjB,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC;QAClC,IAAI,MAAM,CAAC,QAAQ,CAAC,MAAM,KAAK,CAAC,EAAE;YAE9B,OAAO,EAAE,CAAC;SACb;aAAM;YACH,OAAO,IAAI,GAAG,aAAa,CAAC,IAAI,CAAC,GAAG,WAAW,CAAC;SACnD;KACJ;IACD,IAAI,IAAI,CAAC,IAAI,KAAK,CAAC,EAAE;QAKjB,IAAI,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;YAC5B,OAAO,IAAI,GAAG,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,WAAW,CAAC;SACrD;QACD,OAAO,GAAG,GAAG,IAAI,CAAC,IAAI,GAAG,cAAc,CAAC;KAC3C;IACD,IAAI,IAAI,CAAC,IAAI,KAAK,WAAW,EAAE;QAI3B,IAAI,GAAG,iBAAiB,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;KACrC;IACD,MAAM,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC;IACzB,IAAI,QAAQ,GAAG;QACX,CAAC,EAAE,WAAW;QACd,CAAC,EAAE,MAAM;QACT,EAAE,EAAE,UAAU;QACd,EAAE,EAAE,EAAE;QACN,EAAE,EAAE,UAAU;QACd,GAAG,EAAE,OAAO;QACZ,GAAG,EAAE,WAAW;QAChB,IAAI,EAAE,EAAE;QACR,IAAI,EAAE,EAAE;QACR,IAAI,EAAE,UAAU;QAChB,MAAM,EAAE,UAAU;QAClB,OAAO,EAAE,MAAM;KAClB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACb,OAAO,CAAC,MAAM,CAAC,OAAO,QAAQ,KAAK,WAAW,CAAC,CAAC;IAChD,IAAI,IAAI,CAAC,IAAI,KAAK,GAAG,EAAE;QAInB,OAAO,cAAc,CAAC;KACzB;IAGD,IAAI,MAAM,IAAI,MAAM,CAAC,IAAI,KAAK,GAAG,EAAE;QAG/B,IAAI,IAAI,CAAC,IAAI,KAAK,IAAI,IAAI,IAAI,CAAC,IAAI,KAAK,IAAI,EAAE;YAC1C,IAAI,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE;gBACnC,QAAQ,GAAG,QAAQ,CAAC;aACvB;iBAAM;gBACH,QAAQ,GAAG,UAAU,CAAC;aACzB;SACJ;KACJ;SAAM,IAAI,MAAM,IAAI,MAAM,CAAC,IAAI,KAAK,GAAG,EAAE;QAEtC,QAAQ,GAAG,EAAE,CAAC;KACjB;IACD,MAAM,KAAK,GAAG,MAAM,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;IACpC,IAAI,KAAK,EAAE;QAEP,QAAQ,GAAG,KAAK,CAAC;KACpB;IAED,OAAO,QAAQ,GAAG,IAAI,MAAM,IAAI,QAAQ,GAAG,GAAG,MAAM,CAAC;AACzD,CAAC;AAID,SAAS,gBAAgB,CAAC,IAAI;IAC1B,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,KAAK,CAAC;QAAE,OAAO,EAAE,CAAC;IACxC,IAAI,IAAI,CAAC,IAAI,KAAK,GAAG,EAAE;QAEnB,QACI,IAAI,CAAC,YAAY,EAAE,SAAS,CAAC;YAC7B,UAAU;YACV,OAAO,CAAC,IAAI,CAAC;YACb,WAAW,EACb;KACL;IACD,IAAI,IAAI,CAAC,IAAI,KAAK,GAAG,EAAE;QAEnB,IAAI,OAAO,CAAC,IAAI,EAAE,YAAY,CAAC,EAAE;YAC7B,QACI,IAAI,CAAC,iBAAiB,EAAE,SAAS,CAAC;gBAClC,UAAU;gBACV,OAAO,CAAC,IAAI,CAAC;gBACb,WAAW,EACb;SACL;QACD,QACI,IAAI,CAAC,QAAQ,EAAE,SAAS,CAAC,GAAG,UAAU,GAAG,OAAO,CAAC,IAAI,CAAC,GAAG,WAAW,EACtE;KACL;IACD,IAAI,IAAI,CAAC,IAAI,KAAK,CAAC,EAAE;QAEjB,QACI,IAAI,CAAC,OAAO,EAAE,SAAS,CAAC,GAAG,UAAU,GAAG,OAAO,CAAC,IAAI,CAAC,GAAG,WAAW,EACrE;KACL;IACD,IAAI,IAAI,CAAC,IAAI,KAAK,CAAC,EAAE;QAKjB,IAAI,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;YAC5B,QACI,IAAI,CAAC,SAAS,EAAE,SAAS,CAAC;gBAC1B,UAAU;gBACV,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC;gBACrB,WAAW,EACb;SACL;QACD,QACI,IAAI,CAAC,YAAY,EAAE,SAAS,CAAC;YAC7B,UAAU;YACV,OAAO,CAAC,IAAI,CAAC;YACb,WAAW,EACb;KACL;IACD,IAAI,IAAI,CAAC,IAAI,KAAK,CAAC,EAAE;QAEjB,QACI,IAAI,CAAC,SAAS,EAAE,SAAS,CAAC;YAC1B,UAAU;YACV,GAAG;YACH,OAAO,CAAC,IAAI,CAAC;YACb,GAAG;YACH,WAAW,EACb;KACL;AACL,CAAC;AAQD,SAAS,WAAW,CAAC,IAAI,EAAE,IAAI;IAC3B,IAAI,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;QAE7B,OAAO,IAAI,CAAC;KACf;IACD,IAAI,CAAC,mBAAmB,CAAC,IAAI,EAAE,IAAI,CAAC,EAAE;QAElC,OAAO,CAAC,IAAI,CAAC,oBAAoB,EAAE,IAAI,CAAC,CAAC;KAG5C;IACD,IAAI,MAAM,GAAG,EAAE,CAAC;IAChB,MAAM,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IAChC,IAAI,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE;QACpB,MAAM,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;QAEpB,IAAI,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;KAGpC;IACD,MAAM,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IACrC,MAAM;QACF,GAAG;YACH,kBAAkB,CACd,YAAY;iBACP,GAAG,CAAC,CAAC,WAAW;gBACb,IAAI,UAAU,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE;oBAG9B,OAAO,WAAW,CAAC;iBACtB;gBAID,IAAI,SAAS,GAAG,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;gBACvD,IAAI,SAAS,EAAE;oBACX,OAAO,kBAAkB,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;iBAC9C;gBACD,SAAS,GAAG,mBAAmB,CAAC,WAAW,CAAC,CAAC;gBAC7C,IAAI,SAAS,EAAE;oBACX,OAAO,kBAAkB,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;iBAC9C;gBACD,OAAO,CAAC,IAAI,CAAC,oBAAoB,EAAE,WAAW,CAAC,CAAC;gBAChD,OAAO,WAAW,CAAC;aACtB,CAAC;iBACD,IAAI,CAAC,GAAG,CAAC,CACjB,CAAC;IACN,OAAO,MAAM,CAAC;AAClB,CAAC;AAUD,SAAS,cAAc,CAAC,IAAI,EAAE,GAAG;IAC7B,GAAG,GAAG,GAAG,CAAC,OAAO,CACb,kCAAkC,EAClC,CAAC,MAAM,EAAE,EAAE,EAAE,EAAE,KAAK,YAAY,EAAE,KAAK,EAAE,MAAM,CAClD,CAAC;IACF,GAAG,GAAG,GAAG,CAAC,OAAO,CACb,uBAAuB,EACvB,CAAC,MAAM,EAAE,EAAE,KAAK,YAAY,EAAE,KAAK,EAAE,MAAM,CAC9C,CAAC;IAIF,GAAG,GAAG,GAAG,CAAC,OAAO,CACb,oCAAoC,EACpC,CAAC,MAAM,EAAE,EAAE,EAAE,EAAE,KACX,YAAY,WAAW,CAAC,IAAI,EAAE,EAAE,CAAC,WAAW,EAAE,aAAa,CAClE,CAAC;IAEF,GAAG,GAAG,GAAG,CAAC,OAAO,CACb,uBAAuB,EACvB,CAAC,MAAM,EAAE,EAAE,KACP,YAAY,WAAW,CAAC,IAAI,EAAE,EAAE,CAAC,WAAW,EAAE,aAAa,CAClE,CAAC;IAEF,GAAG,GAAG,GAAG,CAAC,OAAO,CACb,kCAAkC,EAClC,CAAC,MAAM,EAAE,EAAE,KACP,YAAY,WAAW,CAAC,IAAI,EAAE,EAAE,CAAC,WAAW,EAAE,aAAa,CAClE,CAAC;IAEF,GAAG,GAAG,GAAG,CAAC,OAAO,CACb,qBAAqB,EACrB,CAAC,MAAM,EAAE,EAAE,KACP,YAAY,WAAW,CAAC,IAAI,EAAE,EAAE,CAAC,WAAW,EAAE,aAAa,CAClE,CAAC;IAIF,GAAG,GAAG,GAAG,CAAC,OAAO,CACb,iCAAiC,EACjC,CAAC,MAAM,EAAE,EAAE,KAAK,YAAY,WAAW,CAAC,IAAI,EAAE,EAAE,CAAC,KAAK,EAAE,MAAM,CACjE,CAAC;IAGF,GAAG,GAAG,GAAG,CAAC,OAAO,CACb,8CAA8C,EAC9C,CAAC,MAAM,EAAE,EAAE,EAAE,EAAE,KAAK,YAAY,WAAW,CAAC,IAAI,EAAE,EAAE,CAAC,KAAK,EAAE,MAAM,CACrE,CAAC;IAGF,GAAG,GAAG,GAAG,CAAC,OAAO,CACb,iBAAiB,EACjB,CAAC,MAAM,EAAE,EAAE,KAAK,YAAY,WAAW,CAAC,IAAI,EAAE,EAAE,CAAC,KAAK,EAAE,MAAM,CACjE,CAAC;IAGF,GAAG,GAAG,GAAG,CAAC,OAAO,CACb,8BAA8B,EAC9B,CAAC,MAAM,EAAE,EAAE,EAAE,EAAE,KAAK,YAAY,WAAW,CAAC,IAAI,EAAE,EAAE,CAAC,KAAK,EAAE,MAAM,CACrE,CAAC;IAGF,GAAG,GAAG,GAAG,CAAC,OAAO,CAAC,+BAA+B,EAAE,CAAC,MAAM,EAAE,EAAE,EAAE,EAAE;QAC9D,IAAI,IAAI,GAAG,mBAAmB,CAAC,EAAE,CAAC,CAAC;QACnC,IAAI,CAAC,IAAI,EAAE;YACP,OAAO,CAAC,IAAI,CAAC,kCAAkC,EAAE,EAAE,CAAC,CAAC;YACrD,OAAO,EAAE,CAAC;SACb;QACD,OAAO,aAAa,CAAC,IAAI,CAAC,CAAC;KAC9B,CAAC,CAAC;IAEH,OAAO,GAAG,CAAC;AACf,CAAC;AAKD,SAAS,aAAa,CAAC,IAAI,EAAE,GAAG;IAC5B,MAAM,KAAK,GAAG,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;IAC9B,MAAM,MAAM,GAAG,EAAE,CAAC;IAClB,IAAI,YAAY,GAAG,KAAK,CAAC;IACzB,IAAI,WAAW,GAAG,KAAK,CAAC;IACxB,IAAI,YAAY,GAAG,EAAE,CAAC;IACtB,IAAI,WAAW,GAAG,EAAE,CAAC;IACrB,KAAK,CAAC,OAAO,CAAC,CAAC,IAAI;QACf,IAAI,YAAY,EAAE;YAEd,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;YAC7B,IAAI,CAAC,EAAE;gBACH,IAAI,YAAY,CAAC,MAAM,GAAG,CAAC,EAAE;oBACzB,MAAM,CAAC,IAAI,CAAC;wBACR,IAAI,EAAE,WAAW;wBACjB,OAAO,EAAE,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC;qBACnC,CAAC,CAAC;iBACN;gBACD,YAAY,GAAG,KAAK,CAAC;gBACrB,WAAW,GAAG,EAAE,CAAC;gBACjB,YAAY,GAAG,EAAE,CAAC;aACrB;iBAAM;gBAEH,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aAC3B;SACJ;aAAM,IAAI,WAAW,EAAE;YAEpB,IAAI,uBAAuB,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;gBACpC,IAAI,YAAY,CAAC,MAAM,GAAG,CAAC,EAAE;oBACzB,MAAM,CAAC,IAAI,CAAC;wBACR,IAAI,EAAE,WAAW;wBACjB,OAAO,EAAE,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC;qBACnC,CAAC,CAAC;iBACN;gBACD,WAAW,GAAG,KAAK,CAAC;gBACpB,WAAW,GAAG,EAAE,CAAC;gBACjB,YAAY,GAAG,EAAE,CAAC;aACrB;iBAAM;gBAEH,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aAC3B;SACJ;aAAM;YAGH,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,2CAA2C,CAAC,CAAC;YAChE,IAAI,CAAC,EAAE;gBAEH,IAAI,YAAY,CAAC,MAAM,GAAG,CAAC,EAAE;oBACzB,MAAM,CAAC,IAAI,CAAC;wBACR,IAAI,EAAE,WAAW;wBACjB,OAAO,EAAE,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC;qBACnC,CAAC,CAAC;iBACN;gBACD,YAAY,GAAG,IAAI,CAAC;gBACpB,WAAW,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;gBACnB,YAAY,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;aACzB;iBAAM;gBACH,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,sCAAsC,CAAC,CAAC;gBACvD,IAAI,CAAC,EAAE;oBAEH,IAAI,YAAY,CAAC,MAAM,GAAG,CAAC,EAAE;wBACzB,MAAM,CAAC,IAAI,CAAC;4BACR,IAAI,EAAE,WAAW;4BACjB,OAAO,EAAE,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC;yBACnC,CAAC,CAAC;qBACN;oBACD,WAAW,GAAG,IAAI,CAAC;oBACnB,WAAW,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;oBACnB,YAAY,GAAG,EAAE,CAAC;iBACrB;qBAAM;oBAEH,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;iBAC3B;aACJ;SACJ;KACJ,CAAC,CAAC;IACH,IAAI,YAAY,CAAC,MAAM,GAAG,CAAC,EAAE;QACzB,MAAM,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,WAAW,EAAE,OAAO,EAAE,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;KACxE;IACD,OAAO,MAAM;SACR,GAAG,CAAC,CAAC,KAAK;QACP,IAAI,KAAK,CAAC,IAAI,EAAE;YACZ,IAAI,UAAU,GACV;gBACI,MAAM,EAAE,QAAQ;gBAChB,OAAO,EAAE,SAAS;gBAClB,OAAO,EAAE,SAAS;aACrB,CAAC,KAAK,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,IAAI,MAAM,CAAC;YAC1C,IAAI,MAAM,GAAG,wBAAwB,GAAG,UAAU,GAAG,IAAI,CAAC;YAC1D,MAAM,IAAI,QAAQ,GAAG,KAAK,CAAC,IAAI,GAAG,SAAS,CAAC;YAC5C,MAAM,IAAI,QAAQ,CAAC,MAAM,CAAC,cAAc,CAAC,IAAI,EAAE,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC;YAC/D,MAAM,IAAI,YAAY,CAAC;YACvB,OAAO,MAAM,CAAC;SACjB;QACD,OAAO,QAAQ,CAAC,MAAM,CAAC,cAAc,CAAC,IAAI,EAAE,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC;KAC/D,CAAC;SACD,IAAI,CAAC,IAAI,CAAC,CAAC;AACpB,CAAC;AAED,SAAS,aAAa,CAAC,IAAI;IACvB,IAAI,CAAC,IAAI;QAAE,OAAO,EAAE,CAAC;IACrB,IAAI,IAAI,CAAC,UAAU,IAAI,CAAC,IAAI,CAAC,OAAO;QAChC,OAAO,aAAa,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;IAC7C,IAAI,CAAC,IAAI,CAAC,OAAO;QAAE,OAAO,EAAE,CAAC;IAC7B,IAAI,MAAM,GAAG,EAAE,CAAC;IAChB,IAAI,OAAO,GAAG,IAAI,CAAC;IAEnB,IAAI,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE;QACxB,MAAM,IAAI,aAAa,CAAC,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,GAAG,OAAO,CAAC;KACnE;IACD,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE;QACnB,MAAM,IAAI,aAAa,CAAC,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,OAAO,CAAC;KAC9D;IACD,MAAM,OAAO,GAAG,MAAM,CAAC,IAAI,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC;IAChD,IAAI,OAAO,EAAE;QACT,MAAM,IAAI,aAAa,CAAC,IAAI,EAAE,OAAO,CAAC,GAAG,OAAO,CAAC;KACpD;IAED,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;QACnD,MAAM;YACF,OAAO;gBACP,IAAI,CAAC,OAAO,CAAC,IAAI;qBACZ,GAAG,CAAC,CAAC,CAAC,KAAK,SAAS,CAAC,IAAI,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC;qBAC1C,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;qBAClB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;gBAC5B,OAAO,CAAC;KACf;IACD,OAAO,MAAM,CAAC;AAClB,CAAC;AAED,SAAS,aAAa,CAAC,IAAI;IACvB,IAAI,CAAC,IAAI;QAAE,OAAO,EAAE,CAAC;IACrB,IAAI,IAAI,CAAC,IAAI,KAAK,CAAC,EAAE;QACjB,OAAO,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC;KACpD;IACD,OAAO,aAAa,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;AAC1C,CAAC;AAED,SAAS,YAAY,CAAC,IAAI;IACtB,QACI,MAAM,CAAC,IAAI,EAAE,QAAQ,CAAC;QACtB,MAAM,CAAC,IAAI,EAAE,QAAQ,CAAC;QACtB,MAAM,CAAC,IAAI,EAAE,UAAU,CAAC,EAC1B;AACN,CAAC;AAOD,SAAS,gBAAgB,CAAC,IAAI,EAAE,WAAY;IACxC,MAAM,MAAM,GAAG,SAAS,CAAC,IAAI,CAAC,CAAC;IAC/B,IAAI,CAAC,WAAW,EAAE;QACd,WAAW,GAAG,WAAW,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC;QAGlD,IACI,IAAI,CAAC,IAAI,KAAK,CAAC;YACf,IAAI,CAAC,IAAI,KAAK,EAAE;YAChB,IAAI,CAAC,IAAI,KAAK,EAAE;YAChB,IAAI,CAAC,IAAI,KAAK,GAAG;YACjB,IAAI,CAAC,IAAI,KAAK,GAAG;YACjB,IAAI,CAAC,IAAI,KAAK,IAAI;YAClB,IAAI,CAAC,IAAI,KAAK,IAAI,EACpB;YACE,IACI,MAAM;iBACL,MAAM,CAAC,IAAI,KAAK,CAAC,IAAI,MAAM,CAAC,IAAI,KAAK,CAAC,IAAI,MAAM,CAAC,IAAI,KAAK,GAAG,CAAC,EACjE;gBAEE,WAAW,GAAG,OAAO,CAAC,MAAM,CAAC,GAAG,GAAG,GAAG,WAAW,CAAC;aACrD;SACJ;KACJ;IAED,MAAM,SAAS,GAAG,aAAa,CAAC,IAAI,CAAC,CAAC;IAEtC,IAAI,MAAM,GAAG,+BAA+B,kBAAkB,CAC1D,SAAS,CAAC,MAAM,CACnB,MAAM,CAAC;IAER,OAAO,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;IACpC,MAAM,IAAI,QAAQ,CAAC;IACnB,IAAI,MAAM,CAAC,IAAI,EAAE,YAAY,CAAC;QAAE,MAAM,IAAI,qBAAqB,CAAC;IAChE,MAAM,IAAI,GAAG,CAAC;IACd,MAAM,IAAI,WAAW,CAAC,IAAI,CAAC,CAAC;IAC5B,MAAM,IAAI,QAAQ,GAAG,WAAW,GAAG,SAAS,CAAC;IAC7C,MAAM,IAAI,qBAAqB,CAAC,SAAS,CAAC,CAAC;IAC3C,MAAM,IAAI,OAAO,CAAC;IAElB,OAAO,MAAM,CAAC;AAClB,CAAC;AAOD,SAAS,gBAAgB,CAAC,IAAI;IAC1B,OAAO,aAAa,CAAC,IAAI,CAAC,GAAG,gBAAgB,CAAC;AAClD,CAAC;AAUD,SAAS,gBAAgB,CAAC,IAAI;IAC1B,IAAI,YAAY,CAAC,IAAI,CAAC;QAAE,OAAO,EAAE,CAAC;IAIlC,IAAI,MAAM,GAAG,iBAAiB,CAAC,IAAI,CAAC,CAAC;IACrC,IAAI,MAAM;QAAE,OAAO,MAAM,CAAC;IAE1B,MAAM,MAAM,GAAG,SAAS,CAAC,IAAI,CAAC,CAAC;IAC/B,IAAI,WAAW,GAAG,EAAE,CAAC;IACrB,IAAI,SAAS,GAAG,EAAE,CAAC;IACnB,IAAI,IAAI,CAAC,IAAI,KAAK,GAAG,EAAE;QAGnB,WAAW;YACP,IAAI,CAAC,MAAM,EAAE,SAAS,CAAC,GAAG,WAAW,MAAM,CAAC,IAAI,WAAW,CAAC;QAChE,SAAS,GAAG,WAAW,CAAC;KAC3B;SAAM,IAAI,MAAM,IAAI,MAAM,CAAC,IAAI,KAAK,CAAC,EAAE;QAEpC,SAAS,GAAG,WAAW,IAAI,CAAC,IAAI,WAAW,CAAC;QAC5C,WAAW,GAAG,cAAc,MAAM,CAAC,IAAI,OAAO,GAAG,SAAS,CAAC;KAC9D;SAAM,IAAI,MAAM,IAAI,CAAC,MAAM,CAAC,IAAI,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,CAAC,MAAM,CAAC,EAAE;QAG5D,SAAS,GAAG,WAAW,IAAI,CAAC,IAAI,WAAW,CAAC;QAI5C,IAAI,MAAM,CAAC,IAAI,KAAK,CAAC,IAAI,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE;YACnD,WAAW;gBACP,cAAc,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,GAAG,SAAS,CAAC;SAChE;aAAM;YACH,WAAW,GAAG,MAAM,CAAC,IAAI,GAAG,GAAG,GAAG,SAAS,CAAC;SAC/C;KACJ;SAAM;QACH,SAAS,GAAG,WAAW,IAAI,CAAC,IAAI,WAAW,CAAC;QAC5C,WAAW,GAAG,SAAS,CAAC;KAC3B;IACD,MAAM,GAAG,gBAAgB,CAAC,IAAI,EAAE,WAAW,CAAC,CAAC;IAE7C,MAAM,IAAI,WAAW,CAAC;IAQtB,MAAM,IAAI,IAAI,CAAC,UAAU;SACpB,GAAG,CAAC,CAAC,SAAS;QACX,IAAI,MAAM,GAAG,WAAW,CAAC;QACzB,MAAM,IAAI,WAAW,CAAC,SAAS,CAAC,CAAC;QACjC,MAAM,IAAI,iBAAiB,CAAC;QAC5B,MAAM,IAAI,SAAS,CAAC;QAEpB,MAAM,IAAI,MAAM,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC;QACtC,MAAM,IAAI,mBAAmB,CAAC;QAK9B,MAAM,IAAI,MAAM,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;QAErC,MAAM,IAAI,WAAW,CAAC;QACtB,OAAO,MAAM,CAAC;KACjB,CAAC;SACD,IAAI,CAAC,UAAU,CAAC,CAAC;IAEtB,OAAO,MAAM,GAAG,YAAY,GAAG,gBAAgB,CAAC,IAAI,CAAC,CAAC;AAC1D,CAAC;AAKD,SAAS,kBAAkB,CAAC,IAAI;IAC5B,IAAI,YAAY,CAAC,IAAI,CAAC;QAAE,OAAO,EAAE,CAAC;IAElC,IAAI,WAAW,GAAG,EAAE,CAAC;IAErB,IAAI,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,YAAY,EAAE;QAExC,WAAW;YACP,IAAI,CAAC,UAAU,EAAE,SAAS,CAAC,GAAG,WAAW,IAAI,CAAC,IAAI,WAAW,CAAC;KACrE;SAAM,IAAI,IAAI,CAAC,YAAY,EAAE;QAE1B,WAAW,GAAG,IAAI,CAAC,MAAM,EAAE,SAAS,CAAC,GAAG,WAAW,IAAI,CAAC,IAAI,WAAW,CAAC;KAC3E;SAAM;QAEH,WAAW,GAAG,IAAI,CAAC,MAAM,EAAE,SAAS,CAAC,GAAG,WAAW,IAAI,CAAC,IAAI,WAAW,CAAC;KAC3E;IACD,IAAI,MAAM,GAAG,gBAAgB,CAAC,IAAI,EAAE,WAAW,CAAC,CAAC;IAEjD,MAAM,IAAI,WAAW,CAAC;IAEtB,MAAM,IAAI,GAAG,IAAI,CAAC,YAAY;UACxB,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,IAAI;UACzB,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;IAChC,MAAM,IAAI,WAAW,CAAC;IACtB,MAAM,IAAI,SAAS,CAAC;IACpB,MAAM,IAAI,UAAU,CAAC;IACrB,MAAM,IAAI,IAAI,CAAC,IAAI,CAAC;IACpB,MAAM,IAAI,KAAK,CAAC,IAAI,CAAC,CAAC;IACtB,MAAM,IAAI,MAAM,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;IACjC,MAAM,IAAI,WAAW,CAAC;IACtB,IAAI,IAAI,CAAC,YAAY,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE;QACzC,MAAM,IAAI,IAAI,CAAC,WAAW,EAAE,cAAc,CAAC,CAAC;KAC/C;SAAM,IAAI,CAAC,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,YAAY,EAAE;QAChD,MAAM,IAAI,IAAI,CAAC,YAAY,EAAE,cAAc,CAAC,CAAC;KAChD;IACD,MAAM,IAAI,UAAU,CAAC;IAErB,MAAM,IAAI,WAAW,CAAC;IAEtB,OAAO,MAAM,GAAG,YAAY,GAAG,gBAAgB,CAAC,IAAI,CAAC,CAAC;AAC1D,CAAC;AAQD,SAAS,kBAAkB,CAAC,IAAI;IAI5B,IAAI,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ;QAAE,OAAO,EAAE,CAAC;IAEpD,IACI,IAAI,CAAC,MAAM,CAAC,MAAM,KAAK,CAAC;QACxB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC;QAC3C,CAAC,MAAM,CAAC,IAAI,EAAE,SAAS,CAAC,EAC1B;QAGE,OAAO,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;KAC/B;IAED,MAAM,SAAS,GAAG,aAAa,CAAC,IAAI,CAAC,CAAC;IACtC,IAAI,MAAM,GAAG,gBAAgB,kBAAkB,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC;IACtE,MAAM,IAAI,KAAK,CAAC;IAChB,IAAI,MAAM,CAAC,IAAI,EAAE,YAAY,CAAC;QAAE,MAAM,IAAI,qBAAqB,CAAC;IAChE,MAAM,IAAI,GAAG,CAAC;IAEd,MAAM,MAAM,GAAG,SAAS,CAAC,IAAI,CAAC,CAAC;IAC/B,IAAI,MAAM,EAAE;QACR,MAAM,IAAI,MAAM,GAAG,gBAAgB,CAAC,MAAM,CAAC,GAAG,OAAO,CAAC;KACzD;IAED,MAAM,IAAI,QAAQ,GAAG,gBAAgB,CAAC,IAAI,CAAC,GAAG,SAAS,CAAC;IACxD,MAAM,IAAI,qBAAqB,CAAC,SAAS,CAAC,CAAC;IAC3C,MAAM,IAAI,OAAO,CAAC;IAElB,MAAM,IAAI,WAAW,CAAC,IAAI,CAAC,CAAC;IAE5B,MAAM,IAAI,OAAO,CAAC;IAClB,IAAI,IAAI,CAAC,aAAa,EAAE;QACpB,MAAM;YACF,KAAK;gBACL,IAAI,CAAC,UAAU,EAAE,UAAU,CAAC;gBAC5B,IAAI,CAAC,aAAa;qBACb,GAAG,CAAC,CAAC,CAAC,KAAK,MAAM,CAAC,CAAC,CAAC,CAAC;qBACrB,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;qBAClB,IAAI,CAAC,IAAI,CAAC;gBACf,MAAM,CAAC;KACd;IAED,IAAI,IAAI,CAAC,gBAAgB,EAAE;QACvB,MAAM;YACF,KAAK;gBACL,IAAI,CAAC,aAAa,EAAE,UAAU,CAAC;gBAC/B,IAAI,CAAC,gBAAgB;qBAChB,GAAG,CAAC,CAAC,CAAC,KAAK,MAAM,CAAC,CAAC,CAAC,CAAC;qBACrB,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;qBAClB,IAAI,CAAC,IAAI,CAAC;gBACf,MAAM,CAAC;KACd;IAED,IAAI,IAAI,CAAC,UAAU,EAAE;QACjB,MAAM;YACF,KAAK;gBACL,IAAI,CAAC,cAAc,EAAE,UAAU,CAAC;gBAChC,IAAI,CAAC,UAAU;qBACV,GAAG,CAAC,CAAC,CAAC,KAAK,MAAM,CAAC,CAAC,CAAC,CAAC;qBACrB,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;qBAClB,IAAI,CAAC,IAAI,CAAC;gBACf,MAAM,CAAC;KACd;IAED,IAAI,IAAI,CAAC,aAAa,EAAE;QACpB,MAAM;YACF,KAAK;gBACL,IAAI,CAAC,iBAAiB,EAAE,UAAU,CAAC;gBACnC,IAAI,CAAC,aAAa;qBACb,GAAG,CAAC,CAAC,CAAC,KAAK,MAAM,CAAC,CAAC,CAAC,CAAC;qBACrB,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;qBAClB,IAAI,CAAC,IAAI,CAAC;gBACf,MAAM,CAAC;KACd;IACD,MAAM,IAAI,QAAQ,CAAC;IAEnB,OAAO,MAAM,GAAG,YAAY,CAAC,IAAI,CAAC,GAAG,YAAY,CAAC;AACtD,CAAC;AAYD,SAAS,eAAe,CAAC,IAAI;IACzB,IAAI,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ;QAAE,OAAO,EAAE,CAAC;IACpD,IAAI,MAAM,GAAG,gBAAgB,CAAC,IAAI,EAAE,gBAAgB,CAAC,IAAI,CAAC,CAAC,CAAC;IAC5D,MAAM,IAAI,cAAc,CAAC;IACzB,MAAM,IAAI,IAAI,CAAC,QAAQ;SAClB,GAAG,CAAC,CAAC,CAAC;QACH,IAAI,SAAS,GAAG,aAAa,CAAC,CAAC,CAAC,CAAC;QACjC,IAAI,CAAC,GAAG,kBAAkB,CAAC,SAAS,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;QACpD,IAAI,CAAC,CAAC,IAAI,KAAK,IAAI,EAAE;YAEjB,CAAC;gBACG,CAAC,CAAC,UAAU;qBACP,GAAG,CACA,CAAC,SAAS,KACN,WAAW,CAAC,CAAC,EAAE,QAAQ,CAAC;oBACxB,UAAU;oBACV,CAAC,CAAC,IAAI;oBACN,WAAW;oBACX,MAAM,CAAC,SAAS,CAAC;oBACjB,qBAAqB,CAAC,SAAS,CAAC;oBAChC,WAAW;oBACX,aAAa,CAAC,SAAS,CAAC,CAC/B;qBACA,IAAI,CAAC,WAAW,CAAC,GAAG,OAAO,CAAC;SACxC;aAAM,IAAI,CAAC,CAAC,IAAI,KAAK,IAAI,EAAE;YAExB,CAAC;gBACG,UAAU;oBACV,CAAC,CAAC,IAAI;oBACN,WAAW;oBACX,KAAK,CAAC,IAAI,CAAC;oBACX,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC;oBACd,qBAAqB,CAAC,SAAS,CAAC;oBAChC,WAAW;oBACX,aAAa,CAAC,CAAC,CAAC,CAAC;SACxB;aAAM;YAGH,OAAO,CAAC,KAAK,CAAC,8CAA8C,CAAC,CAAC;SACjE;QACD,OAAO,CAAC,CAAC;KACZ,CAAC;SACD,IAAI,CAAC,iBAAiB,CAAC,CAAC;IAC7B,MAAM,IAAI,gBAAgB,CAAC;IAC3B,OAAO,MAAM,GAAG,gBAAgB,CAAC,IAAI,CAAC,CAAC;AAC3C,CAAC;AAUD,SAAS,iBAAiB,CAAC,IAAI;IAC3B,IAAI,MAAM,GAAG,SAAS,CAAC,IAAI,CAAC,CAAC;IAC7B,IAAI,UAAU,GAAG,CACb,MAAM,CAAC,IAAI,EAAE,SAAS,CAAC,IAAI,MAAM,CAAC,MAAM,EAAE,SAAS,CAAC,EACtD,IAAI,EAAE,CAAC;IACT,IAAI,CAAC,UAAU;QAAE,OAAO,EAAE,CAAC;IAE3B,IAAI,SAAS,CAAC;IACd,IAAI,IAAI,CAAC,IAAI,KAAK,IAAI,EAAE;QAEpB,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW;YAAE,OAAO,EAAE,CAAC;QACtC,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;KACnD;SAAM,IAAI,IAAI,CAAC,IAAI,KAAK,IAAI,EAAE;QAE3B,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;KAClC;SAAM;QACH,OAAO,EAAE,CAAC;KACb;IACD,IAAI,MAAM,GAAG,CAAC,GAAG,SAAS,CAAC,UAAU,CAAC,CAAC;IAEvC,IAAI,MAAM,GAAG,gBAAgB,CACzB,IAAI,EACJ,mDAAmD;QAC/C,IAAI,CAAC,IAAI;QACT,WAAW,CAClB,CAAC;IACF,MAAM,IAAI,OAAO,CAAC;IAClB,MAAM,IAAI,QAAQ,GAAG,UAAU,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC;IAC7C,MAAM,CAAC,KAAK,EAAE,CAAC;IACf,IAAI,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE;QACnB,MAAM,IAAI,KAAK,CAAC,GAAG,CAAC,CAAC;QACrB,MAAM,IAAI,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,GAAG,GAAG,EAAE,eAAe,CAAC,CAAC;QACvD,MAAM,IAAI,KAAK,CAAC,IAAI,CAAC,CAAC;QACtB,MAAM,IAAI,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC;QACzD,MAAM,IAAI,KAAK,CAAC,GAAG,CAAC,CAAC;KACxB;SAAM;QAEH,MAAM,IAAI,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,GAAG,GAAG,EAAE,eAAe,CAAC,CAAC;KAC1D;IACD,MAAM,IAAI,KAAK,CAAC,GAAG,CAAC,CAAC;IACrB,IAAI,SAAS,CAAC,IAAI,EAAE;QAChB,MAAM,IAAI,KAAK,CAAC,IAAI,CAAC,CAAC;QACtB,MAAM,IAAI,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;KACpC;IACD,MAAM,IAAI,SAAS,CAAC;IAEpB,IAAI,MAAM,CAAC,MAAM,GAAG,CAAC,IAAI,SAAS,CAAC,IAAI,EAAE;QACrC,MAAM,IAAI,UAAU,CAAC;QAErB,IAAI,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE;YAEnB,MAAM;gBACF,UAAU;oBACV,MAAM;yBACD,GAAG,CAAC,CAAC,KAAK;wBACP,IAAI,CAAC,GACD,eAAe,GAAG,KAAK,CAAC,IAAI,GAAG,iBAAiB,CAAC;wBACrD,MAAM,OAAO,GAAG,MAAM,CAAC,KAAK,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;wBAC5C,IAAI,OAAO,EAAE;4BACT,CAAC,IAAI,KAAK,CAAC,IAAI,CAAC,GAAG,OAAO,CAAC;yBAC9B;wBACD,CAAC,IAAI,eAAe,CAAC;wBACrB,CAAC,IAAI,aAAa,CAAC,KAAK,CAAC,CAAC;wBAC1B,OAAO,CAAC,CAAC;qBACZ,CAAC;yBACD,IAAI,CAAC,eAAe,CAAC,CAAC;YAC/B,MAAM,IAAI,WAAW,CAAC;SACzB;QACD,IAAI,SAAS,CAAC,IAAI,IAAI,MAAM,CAAC,IAAI,EAAE,SAAS,CAAC,EAAE;YAE3C,MAAM,IAAI,UAAU,CAAC;YACrB,MAAM,IAAI,qBAAqB,GAAG,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;YACzD,MAAM,IAAI,eAAe,CAAC;YAC1B,IAAI,MAAM,CAAC,IAAI,EAAE,SAAS,CAAC,EAAE;gBACzB,MAAM,IAAI,aAAa,CAAC,IAAI,EAAE,MAAM,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC,CAAC;aAC1D;YACD,MAAM,IAAI,WAAW,CAAC;SACzB;QACD,MAAM,IAAI,WAAW,CAAC;KACzB;IACD,MAAM,IAAI,UAAU,CAAC;IAErB,OAAO,MAAM,GAAG,gBAAgB,CAAC,IAAI,CAAC,CAAC;AAC3C,CAAC;AAOD,SAAS,kBAAkB,CAAC,IAAI;IAC5B,IAAI,YAAY,CAAC,IAAI,CAAC;QAAE,OAAO,EAAE,CAAC;IAIlC,IAAI,MAAM,GAAG,iBAAiB,CAAC,IAAI,CAAC,CAAC;IACrC,IAAI,MAAM;QAAE,OAAO,MAAM,CAAC;IAE1B,MAAM,MAAM,GAAG,SAAS,CAAC,IAAI,CAAC,CAAC;IAC/B,IAAI,WAAW,GAAG,EAAE,CAAC;IACrB,IAAI,SAAS,GAAG,EAAE,CAAC;IACnB,IAAI,MAAM,IAAI,CAAC,MAAM,CAAC,IAAI,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,CAAC,MAAM,CAAC,EAAE;QAGzD,SAAS,GAAG,WAAW,IAAI,CAAC,IAAI,WAAW,CAAC;QAC5C,WAAW,GAAG,MAAM,CAAC,IAAI,GAAG,GAAG,GAAG,SAAS,CAAC;KAC/C;IACD,QACI,gBAAgB,CAAC,IAAI,EAAE,WAAW,CAAC;QACnC,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,OAAO,CAAC;QAC1B,gBAAgB,CAAC,IAAI,CAAC,EACxB;AACN,CAAC;AAMD,SAAS,cAAc,CAAC,IAAI;IACxB,IAAI,YAAY,CAAC,IAAI,CAAC;QAAE,OAAO,EAAE,CAAC;IAClC,IAAI,MAAM,GAAG,gBAAgB,CAAC,IAAI,CAAC,CAAC;IACpC,IAAI,IAAI,CAAC,QAAQ,EAAE;QACf,MAAM,IAAI,MAAM,CAAC;QACjB,MAAM,IAAI,IAAI,CAAC,QAAQ;aAClB,GAAG,CAAC,CAAC,UAAU;YACZ,OAAO,MAAM,CAAC,UAAU,EAAE,OAAO,CAAC,CAAC;SACtC,CAAC;aACD,IAAI,CAAC,EAAE,CAAC,CAAC;QACd,MAAM,IAAI,OAAO,CAAC;KACrB;IACD,OAAO,MAAM,GAAG,gBAAgB,CAAC,IAAI,CAAC,CAAC;AAC3C,CAAC;AAED,SAAS,mBAAmB,CAAC,IAAI;IAC7B,IAAI,YAAY,CAAC,IAAI,CAAC;QAAE,OAAO,EAAE,CAAC;IAClC,IAAI,MAAM,GAAG,gBAAgB,CAAC,IAAI,CAAC,CAAC;IAEpC,MAAM,OAAO,GAAG,MAAM,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;IACtC,IAAI,OAAO,EAAE;QACT,MAAM,IAAI,OAAO,CAAC;QAClB,MAAM,IAAI,QAAQ,CAAC;QACnB,MAAM,IAAI,OAAO,CAAC;QAClB,MAAM,IAAI,SAAS,CAAC;QACpB,MAAM,IAAI,QAAQ,CAAC;QAEnB,MAAM,IAAI,MAAM,CAAC;KACpB;IACD,MAAM,IAAI,gBAAgB,CAAC,IAAI,CAAC,CAAC;IACjC,OAAO,MAAM,CAAC;AAClB,CAAC;AAYD,SAAS,WAAW,CAAC,IAAI,EAAE,KAAK;IAC5B,MAAM,MAAM,GAAG,aAAa,CAAC,IAAI,EAAE,KAAK,CAAC,IAAI,CAAC,CAAC;IAG/C,IAAI,MAAM,CAAC,MAAM,KAAK,CAAC;QAAE,OAAO,EAAE,CAAC;IAEnC,IAAI,MAAM,GAAG,WAAW,CAAC;IACzB,IACI,KAAK,CAAC,KAAK,KAAK,cAAc;QAC9B,KAAK,CAAC,KAAK,KAAK,WAAW;QAC3B,KAAK,CAAC,KAAK,KAAK,YAAY,EAC9B;QACE,IACI,CAAC,KAAK,CAAC,IAAI,KAAK,IAAI,IAAI,KAAK,CAAC,IAAI,KAAK,IAAI;YAC3C,MAAM,CAAC,IAAI,EAAE,SAAS,CAAC,EACzB;YAEE,MAAM,IAAI,WAAW,CAAC,IAAI,EAAE,EAAE,EAAE,MAAM,CAAC,CAAC;SAC3C;aAAM,IACH,EAAE,CAAC,KAAK,CAAC,IAAI,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC;YAC/C,KAAK,CAAC,QAAQ,IAAI,CAAC,EACrB;YAGE,MAAM,YAAY,GACd,EAAE,cAAc,EAAE,OAAO,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,KAAK,CAAC,KAAK,CAAC;YAC5D,MAAM,IAAI,WAAW,CAAC,IAAI,EAAE,YAAY,EAAE,MAAM,CAAC,CAAC;SACrD;KACJ;IACD,MAAM,IAAI,GAAG,MAAM;SACd,GAAG,CAAC,CAAC,KAAK;QACP,IAAI,CAAC,GAAG,EAAE,CAAC;QACX,IAAI,KAAK,CAAC,KAAK,EAAE;YACb,CAAC,IAAI,6BAA6B,CAAC;YACnC,CAAC,IAAI,KAAK,CAAC,KAAK,GAAG,SAAS,CAAC;SAChC;QACD,CAAC,IAAI,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,MAAM,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAChE,OAAO,CAAC,CAAC;KACZ,CAAC;SACD,IAAI,CAAC,EAAE,CAAC,CAAC;IACd,IAAI,CAAC,IAAI;QAAE,OAAO,EAAE,CAAC;IACrB,OAAO,MAAM,GAAG,IAAI,GAAG,YAAY,CAAC;AACxC,CAAC;AAED,SAAS,YAAY,CAAC,IAAI;IACtB,IAAI,CAAC,IAAI,CAAC,MAAM;QAAE,OAAO,EAAE,CAAC;IAC5B,IAAI,MAAM,GAAG,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACrC,QACI,aAAa,CAAC,IAAI,CAAC;QACnB,MAAM;aACD,GAAG,CAAC,CAAC,CAAC,KAAK,WAAW,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;aAChC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;aAClB,IAAI,CAAC,MAAM,CAAC,EACnB;AACN,CAAC;AAaD,SAAS,MAAM,CAAC,IAAI,EAAE,KAAK,GAAG,QAAQ;IAelC,IAAI,OAAO,IAAI,KAAK,WAAW;QAAE,OAAO,EAAE,CAAC;IAC3C,IAAI,OAAO,IAAI,KAAK,QAAQ;QAAE,IAAI,GAAG,iBAAiB,CAAC,IAAI,CAAC,CAAC;IAC7D,IAAI,OAAO,IAAI,KAAK,QAAQ;QAAE,IAAI,GAAG,mBAAmB,CAAC,IAAI,CAAC,CAAC;IAI/D,IAAI,KAAK,KAAK,SAAS,IAAI,IAAI,CAAC,MAAM,EAAE;QACpC,IAAI,IAAI,CAAC,IAAI,KAAK,GAAG,IAAI,IAAI,CAAC,IAAI,KAAK,GAAG,EAAE;YAExC,OAAO,kBAAkB,CAAC,IAAI,CAAC,CAAC;SACnC;aAAM,IAAI,IAAI,CAAC,IAAI,KAAK,CAAC,EAAE;YAExB,OAAO,cAAc,CAAC,IAAI,CAAC,CAAC;SAC/B;QACD,OAAO,YAAY,CAAC,IAAI,CAAC,CAAC;KAC7B;IAED,IAAI,MAAM,GAAG,SAAS,CAAC,IAAI,CAAC,CAAC;IAE7B,IAAI,IAAI,CAAC,IAAI,KAAK,UAAU,EAAE;QAS/B,OAAO,CAAC,KAAK,CACJ,uBAAuB,EACvB,IAAI,CAAC,IAAI,CACZ,CAAC;KACL;IAED,IAAI,IAAI,CAAC,IAAI,KAAK,OAAO,EAAE;QAEvB,OAAO,MAAM,CAAC,IAAI,CAAC,WAAW,EAAE,QAAQ,CAAC,GAAG,KAAK,CAAC,IAAI,CAAC,CAAC;KAC3D;IAED,IAAI,IAAI,CAAC,IAAI,KAAK,cAAc,EAAE;QAG9B,OAAO,CAAC,KAAK,CAAC,uBAAuB,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;KACrD;IAED,IAAI,IAAI,CAAC,IAAI,KAAK,OAAO,EAAE;QACvB,OAAO,CAAC,KAAK,CAAC,uBAAuB,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;KACrD;IAED,IAAI,IAAI,CAAC,IAAI,KAAK,eAAe,EAAE;QAE/B,QACI,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC;YACvB,KAAK,CAAC,GAAG,CAAC;YACV,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC;YACtB,KAAK,CAAC,GAAG,CAAC,EACZ;KACL;IAED,IAAI,IAAI,CAAC,IAAI,KAAK,UAAU,EAAE;QAC1B,OAAO,CAAC,KAAK,CAAC,uBAAuB,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;KACrD;IAED,IAAI,IAAI,CAAC,IAAI,KAAK,cAAc,EAAE;QAC9B,IAAI,KAAK,KAAK,OAAO,EAAE;YACnB,QACI,6BAA6B;gBAC7B,IAAI,CAAC,KAAK;qBACL,GAAG,CAAC,CAAC,CAAC,KAAK,MAAM,CAAC,CAAC,CAAC,CAAC;qBACrB,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;qBAClB,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,GAAG,aAAa,CAAC;gBAC3C,YAAY,EACd;SACL;QACD,OAAO,IAAI,CAAC,KAAK;aACZ,GAAG,CAAC,CAAC,CAAC,KAAK,MAAM,CAAC,CAAC,CAAC,CAAC;aACrB,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;aAClB,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC;KAC/B;IAED,IAAI,IAAI,CAAC,IAAI,KAAK,WAAW,EAAE;QAE3B,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;KACrC;IAED,IAAI,IAAI,CAAC,IAAI,KAAK,WAAW,EAAE;QAC3B,OAAO,CAAC,KAAK,CAAC,uBAAuB,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;KACrD;IAED,IAAI,IAAI,CAAC,IAAI,KAAK,WAAW,EAAE;QAI3B,IAAI,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QACrB,IAAI,IAAI,CAAC,aAAa,EAAE;YACpB,IAAI,IAAI,KAAK,CAAC,GAAG,CAAC,CAAC;YACnB,IAAI,IAAI,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC;YACnE,IAAI,IAAI,KAAK,CAAC,GAAG,CAAC,CAAC;SACtB;QAGD,IAAI,SAAS,CAAC;QACd,IAAI,OAAO,IAAI,CAAC,EAAE,KAAK,WAAW,EAAE;YAChC,SAAS,GAAG,iBAAiB,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;SAC1C;QAED,IAAI,CAAC,SAAS,EAAE;YAEZ,SAAS,GAAG,mBAAmB,CAC3B,IAAI,EACJ,MAAM,EACN,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,OAAO,CAC1B,CAAC;SACL;QACD,IAAI,SAAS,EAAE;YACX,MAAM,SAAS,GAAG,aAAa,CAAC,SAAS,CAAC,CAAC;YAC3C,IAAI,SAAS,CAAC,IAAI,KAAK,EAAE,EAAE;gBAEvB,SAAS,CAAC,KAAK,GAAG,SAAS,CAAC,MAAM,CAAC,IAAI,GAAG,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC;aAC7D;iBAAM;gBACH,SAAS,CAAC,KAAK,GAAG,IAAI,CAAC;aAC1B;YACD,OAAO,eAAe,CAAC,SAAS,CAAC,CAAC;SACrC;QAGD,SAAS,GAAG,mBAAmB,CAC3B,IAAI,EACJ,SAAS,EACT,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,OAAO,CAC1B,CAAC;QACF,IAAI,SAAS,EAAE;YACX,OAAO,eAAe,CAAC,aAAa,CAAC,SAAS,CAAC,EAAE,IAAI,CAAC,CAAC;SAC1D;QACD,IAAI,SAAS,EAAE;YACX,OAAO,IAAI,CAAC;SACf;QAED,IACI;YACI,QAAQ;YACR,UAAU;YACV,SAAS;YACT,QAAQ;YACR,QAAQ;YACR,QAAQ;YACR,QAAQ;YACR,QAAQ;YACR,QAAQ;YACR,MAAM;YACN,MAAM;YACN,UAAU;YACV,KAAK;YACL,YAAY;YACZ,OAAO;YACP,gBAAgB;YAChB,eAAe;YACf,YAAY;YACZ,gBAAgB;YAChB,aAAa;YACb,WAAW;YACX,UAAU;YACV,OAAO;YACP,WAAW;YACX,YAAY;YACZ,YAAY;YACZ,mBAAmB;YACnB,YAAY;YACZ,aAAa;YACb,YAAY;YACZ,aAAa;YACb,cAAc;YACd,cAAc;YACd,eAAe;YACf,gBAAgB;YAChB,KAAK;YACL,KAAK;YACL,SAAS;YACT,SAAS;YACT,aAAa;YACb,mBAAmB;YACnB,SAAS;YACT,UAAU;YACV,MAAM;YACN,SAAS;YACT,WAAW;YACX,mBAAmB;YACnB,eAAe;YACf,UAAU;YACV,eAAe;YACf,SAAS;YACT,OAAO;YACP,MAAM;YACN,aAAa;SAChB,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,EACvB;YACE,QACI,4FAA4F;gBAC5F,IAAI,CAAC,IAAI;gBACT,yBAAyB;gBACzB,IAAI;gBACJ,oDAAoD;gBACpD,MAAM,EACR;SACL;QAMD,QACI,iDAAiD;YACjD,IAAI,CAAC,IAAI;YACT,yBAAyB;YACzB,IAAI;YACJ,oDAAoD;YACpD,MAAM,EACR;KACL;IAED,IAAI,IAAI,CAAC,IAAI,KAAK,YAAY,EAAE;QAC5B,OAAO,MAAM,CAAC,IAAI,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC;KAC1C;IAED,IAAI,IAAI,CAAC,IAAI,KAAK,eAAe,EAAE;QAC/B,OAAO,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,KAAK,GAAG,GAAG,EAAE,eAAe,CAAC,CAAC;KACxD;IAED,IAAI,IAAI,CAAC,IAAI,KAAK,OAAO,EAAE;QACvB,QACI,KAAK,CAAC,GAAG,CAAC;YACV,IAAI,CAAC,QAAQ;iBACR,GAAG,CAAC,CAAC,CAAC,KAAK,MAAM,CAAC,CAAC,CAAC,CAAC;iBACrB,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;iBAClB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;YACtB,KAAK,CAAC,GAAG,CAAC,EACZ;KACL;IAED,IAAI,IAAI,CAAC,IAAI,KAAK,cAAc,EAAE;QAE9B,OAAO,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,GAAG,EAAE,SAAS,CAAC,GAAG,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;KACrE;IAED,IAAI,IAAI,CAAC,IAAI,KAAK,eAAe,EAAE;QAG/B,IAAI,MAAM,GAAG,eAAe,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC;QAClD,IAAI,IAAI,CAAC,UAAU,EAAE;YACjB,MAAM,IAAI,IAAI,CAAC,WAAW,EAAE,SAAS,CAAC,CAAC;YACvC,MAAM,IAAI,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;SACrC;QACD,OAAO,MAAM,CAAC;KACjB;IAED,IAAI,IAAI,CAAC,IAAI,KAAK,OAAO,EAAE;QAEvB,IAAI,KAAK,KAAK,OAAO,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;YACtD,QACI,6BAA6B;gBAC7B,KAAK,CAAC,IAAI,CAAC;gBACX,IAAI,CAAC,KAAK;qBACL,GAAG,CAAC,CAAC,CAAC,KAAK,MAAM,CAAC,CAAC,CAAC,CAAC;qBACrB,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC,IAAI,CAAC,CAAC;gBACtC,YAAY,EACd;SACL;aAAM;YACH,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC;SAC9D;KACJ;IAED,IAAI,IAAI,CAAC,IAAI,KAAK,SAAS,EAAE;QAIzB,OAAO,EAAE,CAAC;KACb;IAED,IAAI,IAAI,CAAC,IAAI,KAAK,MAAM,EAAE;QACtB,OAAO,IAAI,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC;KAClC;IAED,IAAI,MAAM,GAAG,EAAE,CAAC;IAEhB,QAAQ,IAAI,CAAC,IAAI;QACb,KAAK,CAAC,CAAC;QACP,KAAK,CAAC,CAAC;QACP,KAAK,CAAC,CAAC;QACP,KAAK,CAAC;YAEF,OAAO,CAAC,MAAM,CAAC,uBAAuB,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;YACnD,MAAM;QAEV,KAAK,EAAE;YACH,MAAM,GAAG,WAAW,kBAAkB,CAClC,aAAa,CAAC,IAAI,CAAC,CAAC,MAAM,CAC7B,IAAI,CAAC;YACN,MAAM,IAAI,UAAU,GAAG,IAAI,CAAC,IAAI,GAAG,WAAW,CAAC;YAC/C,IAAI,OAAO,IAAI,CAAC,YAAY,KAAK,QAAQ,EAAE;gBACvC,MAAM,IAAI,KAAK,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC;aAC9C;YACD,MAAM,IAAI,WAAW,CAAC;YACtB,MAAM,IAAI,WAAW,CAAC,IAAI,CAAC,CAAC;YAC5B,MAAM,IAAI,aAAa,CAAC,IAAI,CAAC,CAAC;YAC9B,MAAM,IAAI,OAAO,CAAC;YAClB,MAAM;QAEV,KAAK,EAAE;YAEH,IAAI,KAAK,KAAK,MAAM,IAAI,KAAK,KAAK,SAAS,EAAE;gBACzC,MAAM,GAAG,gBAAgB,CAAC,IAAI,CAAC,CAAC;gBAChC,MAAM,IAAI,OAAO,GAAG,MAAM,CAAC,IAAI,EAAE,OAAO,CAAC,GAAG,QAAQ,CAAC;gBACrD,MAAM,IAAI,gBAAgB,CAAC,IAAI,CAAC,CAAC;aACpC;iBAAM;gBACH,MAAM,IAAI,UAAU,GAAG,IAAI,CAAC,IAAI,GAAG,WAAW,CAAC;gBAC/C,IAAI,OAAO,CAAC,IAAI,EAAE,YAAY,CAAC,EAAE;oBAC7B,MAAM,IAAI,IAAI,CAAC,GAAG,EAAE,UAAU,CAAC,CAAC;iBACnC;gBACD,IAAI,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,KAAK,SAAS,EAAE;oBAC3C,MAAM,IAAI,KAAK,CAAC,KAAK,CAAC,CAAC;oBACvB,MAAM,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,IAAI,EAAE,CAAC;iBAClC;gBACD,IAAI,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,KAAK,SAAS,EAAE;oBAC3C,MAAM,IAAI,KAAK,CAAC,IAAI,CAAC,CAAC;oBACtB,MAAM,IAAI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;iBAC/B;aACJ;YACD,MAAM;QAEV,KAAK,EAAE;YACH,IAAI,KAAK,KAAK,MAAM,IAAI,KAAK,KAAK,SAAS,EAAE;gBACzC,MAAM,GAAG,gBAAgB,CAAC,IAAI,CAAC,CAAC;aACnC;iBAAM;gBACH,OAAO,CAAC,IAAI,CAAC,yBAAyB,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;aACtD;YACD,MAAM;QAEV,KAAK,GAAG;YACJ,IAAI,KAAK,KAAK,MAAM,IAAI,KAAK,KAAK,SAAS,EAAE;gBAMzC,MAAM,GAAG,eAAe,CAAC,IAAI,CAAC,CAAC;aAClC;iBAAM;gBACH,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC;aACtB;YACD,MAAM;QAEV,KAAK,GAAG;YACJ,IAAI,KAAK,KAAK,MAAM,IAAI,KAAK,KAAK,SAAS,EAAE;gBAMzC,MAAM,GAAG,eAAe,CAAC,IAAI,CAAC,CAAC;aAClC;iBAAM;gBACH,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC;aACtB;YACD,MAAM;QAEV,KAAK,GAAG;YACJ,IAAI,KAAK,KAAK,MAAM,IAAI,KAAK,KAAK,SAAS,EAAE;gBACzC,MAAM,GAAG,gBAAgB,CAAC,IAAI,CAAC,CAAC;aACnC;iBAAM;gBACH,OAAO,CAAC,IAAI,CAAC,yBAAyB,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;aACtD;YACD,MAAM;QAEV,KAAK,IAAI;YACL,IAAI,KAAK,KAAK,MAAM,IAAI,KAAK,KAAK,SAAS,EAAE;gBACzC,MAAM,GAAG,kBAAkB,CAAC,IAAI,CAAC,CAAC;aACrC;iBAAM;gBACH,MAAM;oBACF,CAAC,MAAM,GAAG,MAAM,CAAC,IAAI,GAAG,GAAG,GAAG,EAAE;wBAChC,IAAI,CAAC,IAAI;wBACT,KAAK,CAAC,IAAI,CAAC;wBACX,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;aAChC;YACD,MAAM;QAEV,KAAK,IAAI;YACL,IAAI,KAAK,KAAK,MAAM,IAAI,KAAK,KAAK,SAAS,EAAE;gBACzC,MAAM,GAAG,gBAAgB,CAAC,IAAI,CAAC,CAAC;aACnC;iBAAM;gBACH,OAAO,CAAC,KAAK,CAAC,wCAAwC,CAAC,CAAC;aAC3D;YACD,MAAM;QAEV,KAAK,IAAI,CAAC;QACV,KAAK,KAAK;YAEN,IAAI,KAAK,KAAK,QAAQ,EAAE;gBAEpB,MAAM,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC;gBACpB,IAAI,IAAI,CAAC,UAAU,EAAE;oBACjB,MAAM,IAAI,IAAI,CAAC,UAAU;yBACpB,GAAG,CAAC,CAAC,CAAC,KAAK,MAAM,CAAC,CAAC,CAAC,CAAC;yBACrB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC;iBAC1B;gBACD,MAAM,IAAI,KAAK,CAAC,GAAG,CAAC,CAAC;gBACrB,MAAM,IAAI,KAAK,CAAC,IAAI,CAAC,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aAC7C;iBAAM,IAAI,KAAK,KAAK,OAAO,EAAE;gBAI1B,IAAI,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,IAAI,EAAE;oBAC9B,MAAM,IAAI,UAAU,CAAC;oBACrB,IAAI,IAAI,CAAC,UAAU,EAAE;wBACjB,MAAM;4BACF,UAAU;gCACV,IAAI,CAAC,UAAU;qCACV,GAAG,CAAC,CAAC,KAAK;oCACP,IAAI,CAAC,GACD,eAAe;wCACf,KAAK,CAAC,IAAI;wCACV,iBAAiB,CAAC;oCACtB,MAAM,OAAO,GAAG,MAAM,CAAC,KAAK,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;oCAC5C,IAAI,OAAO,EAAE;wCACT,CAAC,IAAI,KAAK,CAAC,IAAI,CAAC,GAAG,OAAO,CAAC;qCAC9B;oCACD,CAAC,IAAI,eAAe,CAAC;oCACrB,CAAC,IAAI,aAAa,CAAC,KAAK,CAAC,CAAC;oCAC1B,OAAO,CAAC,CAAC;iCACZ,CAAC;qCACD,IAAI,CAAC,eAAe,CAAC,CAAC;wBAC/B,MAAM,IAAI,WAAW,CAAC;qBACzB;oBACD,IAAI,IAAI,CAAC,IAAI,EAAE;wBACX,MAAM,IAAI,UAAU,CAAC;wBACrB,MAAM,IAAI,qBAAqB,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;wBACpD,MAAM,IAAI,eAAe,CAAC;wBAC1B,IAAI,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE;4BACtC,MAAM,IAAI,aAAa,CAAC,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;yBACvD;wBACD,MAAM,IAAI,WAAW,CAAC;qBACzB;oBACD,MAAM,IAAI,WAAW,CAAC;iBACzB;aACJ;iBAAM;gBACH,OAAO,CAAC,KAAK,CAAC,oCAAoC,CAAC,CAAC;aACvD;YACD,MAAM;QAEV,KAAK,IAAI;YAEL,MAAM;gBACF,KAAK,CAAC,GAAG,CAAC;oBACV,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;oBACvD,KAAK,CAAC,GAAG,CAAC,CAAC;YACf,MAAM,IAAI,KAAK,CAAC,IAAI,CAAC,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAC1C,MAAM;QAMV,KAAK,KAAK;YAGN,IAAI,OAAO,CAAC,IAAI,EAAE,QAAQ,CAAC,EAAE;gBACzB,MAAM,IAAI,IAAI,CAAC,KAAK,EAAE,UAAU,CAAC,CAAC;aACrC;YACD,MAAM,IAAI,QAAQ,IAAI,CAAC,IAAI,QAAQ,CAAC;YACpC,IAAI,OAAO,CAAC,IAAI,EAAE,YAAY,CAAC,EAAE;gBAC7B,MAAM,IAAI,IAAI,CAAC,GAAG,EAAE,UAAU,CAAC,CAAC;aACnC;YACD,MAAM,IAAI,KAAK,CAAC,IAAI,CAAC,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAC1C,MAAM;QAEV,KAAK,KAAK;YAEN,IAAI,IAAI,CAAC,UAAU,EAAE;gBACjB,MAAM,IAAI,IAAI,CAAC,UAAU;qBACpB,GAAG,CAAC,CAAC,CAAC,KAAK,MAAM,CAAC,CAAC,CAAC,CAAC;qBACrB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC;aAC1B;iBAAM,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,cAAc,EAAE;gBAE7C,IAAI,KAAK,KAAK,OAAO,EAAE;oBACnB,MAAM,IAAI,KAAK,CAAC,GAAG,CAAC,GAAG,yBAAyB,CAAC;oBACjD,IAAI,IAAI,CAAC,QAAQ,EAAE;wBACf,MAAM;4BACF,MAAM;gCACN,IAAI,CAAC,QAAQ;qCACR,GAAG,CAAC,CAAC,CAAC;oCACH,IAAI,EAAE,GAAG,MAAM,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC;oCAChC,IAAI,MAAM,CAAC,CAAC,EAAE,YAAY,CAAC,EAAE;wCACzB,EAAE,GAAG,IAAI,CAAC,EAAE,EAAE,YAAY,CAAC,CAAC;qCAC/B;oCACD,MAAM,EAAE,GACJ,WAAW,CAAC,CAAC,CAAC,GAAG,aAAa,CAAC,CAAC,CAAC,CAAC;oCACtC,OAAO,EAAE,GAAG,WAAW,GAAG,EAAE,CAAC;iCAChC,CAAC;qCACD,IAAI,CAAC,WAAW,CAAC,CAAC;wBAC3B,MAAM,IAAI,OAAO,CAAC;qBACrB;oBACD,IAAI,IAAI,CAAC,cAAc,EAAE;wBACrB,MAAM,IAAI,MAAM,CAAC;wBACjB,MAAM,IAAI,IAAI,CAAC,cAAc;6BACxB,GAAG,CAAC,CAAC,CAAC,KAAK,MAAM,CAAC,CAAC,CAAC,CAAC;6BACrB,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,WAAW,CAAC,CAAC;wBACpC,MAAM,IAAI,OAAO,CAAC;qBACrB;oBACD,MAAM,IAAI,OAAO,GAAG,KAAK,CAAC,GAAG,CAAC,GAAG,QAAQ,CAAC;iBAC7C;qBAAM,IAAI,KAAK,KAAK,QAAQ,EAAE;oBAC3B,MAAM,IAAI,KAAK,CAAC,GAAG,CAAC,CAAC;oBACrB,IAAI,IAAI,CAAC,QAAQ,EAAE;wBACf,MAAM,IAAI,IAAI,CAAC,QAAQ;6BAClB,GAAG,CAAC,CAAC,CAAC,KAAK,MAAM,CAAC,CAAC,CAAC,CAAC;6BACrB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC;qBAC1B;oBACD,IAAI,IAAI,CAAC,cAAc,EAAE;wBACrB,MAAM,IAAI,IAAI,CAAC,cAAc;6BACxB,GAAG,CAAC,CAAC,CAAC,KAAK,MAAM,CAAC,CAAC,CAAC,CAAC;6BACrB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC;qBAC1B;oBACD,MAAM,IAAI,KAAK,CAAC,GAAG,CAAC,CAAC;iBACxB;qBAAM;oBACH,OAAO,CAAC,KAAK,CAAC,mCAAmC,CAAC,CAAC;iBACtD;aACJ;YACD,MAAM;QAEV,KAAK,MAAM;YACP,MAAM,IAAI,IAAI,CAAC,IAAI,CAAC;YACpB,IAAI,IAAI,CAAC,IAAI,EAAE;gBACX,MAAM,IAAI,IAAI,CAAC,WAAW,EAAE,SAAS,CAAC,CAAC;gBACvC,MAAM,IAAI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aAC/B;YACD,MAAM;QACV,KAAK,MAAM,CAAC;QACZ,KAAK,OAAO;YAGR,OAAO,CAAC,IAAI,CAAC,kBAAkB,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;YAC5C,MAAM;QACV,KAAK,MAAM;YACP,IAAI,KAAK,KAAK,MAAM,IAAI,KAAK,KAAK,SAAS,EAAE;gBACzC,MAAM,GAAG,kBAAkB,CAAC,IAAI,CAAC,CAAC;aACrC;iBAAM;gBACH,OAAO,CAAC,IAAI,CAAC,yBAAyB,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;aACtD;YACD,MAAM;QACV,KAAK,OAAO;YACR,OAAO,CAAC,IAAI,CAAC,yBAAyB,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;YACnD,MAAM;QAEV,KAAK,OAAO;YAER,IAAI,KAAK,KAAK,MAAM,IAAI,KAAK,KAAK,SAAS,EAAE;gBACzC,MAAM,GAAG,mBAAmB,CAAC,IAAI,CAAC,CAAC;aACtC;iBAAM;gBACH,IAAI,GAAG,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;gBACnC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC;gBACnB,IAAI,IAAI,CAAC,aAAa,EAAE;oBACpB,MAAM,IAAI,KAAK,CAAC,GAAG,CAAC,CAAC;oBACrB,MAAM,IAAI,IAAI,CAAC,aAAa;yBACvB,GAAG,CAAC,CAAC,SAAS,KAAK,MAAM,CAAC,SAAS,CAAC,CAAC;yBACrC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC;oBACvB,MAAM,IAAI,KAAK,CAAC,GAAG,CAAC,CAAC;iBACxB;gBACD,IAAI,GAAG,EAAE;oBACL,MAAM;wBACF,KAAK,CAAC,KAAK,CAAC;4BACZ,eAAe,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;iBACtD;aACJ;YACD,MAAM;QAEV,KAAK,OAAO;YACR,OAAO,CAAC,IAAI,CAAC,yBAAyB,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;YACnD,MAAM;QAEV;YACI,OAAO,CAAC,IAAI,CAAC,kBAAkB,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;KACnD;IAED,OAAO,MAAM,CAAC;AAClB,CAAC;AAED,IAAI,MAAM,GAAe,EAAE,CAAC;AAE5B,SAAS,sBAAsB,CAAC,GAAa;IACzC,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACtD,IAAI,MAAM,GAAG,EAAE,CAAC;IAChB,MAAM,GAAG,GAAG,IAAI,OAAO,CAAC,WAAW,EAAE,CAAC;IAGtC,GAAG,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,OAAO,CAAC,cAAc,EAAE,CAAC,CAAC;IACpD,GAAG,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,OAAO,CAAC,aAAa,EAAE,CAAC,CAAC;IAEnD,GAAG,CAAC,SAAS,CAAC;QACV,MAAM,EAAE,CAAC,OAAO,EAAE,MAAM,EAAE,QAAQ,KAAK,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC;QAC3D,IAAI,EAAE,MAAM;QAEZ,MAAM,EAAE,QAAQ;QAChB,MAAM,EAAE,QAAQ;QAChB,sBAAsB,EAAE,IAAI;QAC5B,gBAAgB,EAAE,MAAM;QAExB,mBAAmB,EAAE,IAAI;QACzB,gBAAgB,EAAE,IAAI;KACzB,CAAC,CAAC;IAEH,MAAM,aAAa,GAAG,GAAG,CAAC,SAAS,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;IACjD,IAAI,aAAa,CAAC,MAAM,IAAI,aAAa,CAAC,MAAM,CAAC,MAAM,EAAE;QAKrD,OAAO,CAAC,KAAK,CACT,aAAa,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAC5D,CAAC;QACF,OAAO,EAAE,CAAC;KAEb;IAED,IAAI,aAAa,CAAC,OAAO,EAAE;QACvB,MAAM,GAAG,GAAG,CAAC,UAAU,CAAC,eAAe,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;KAClE;IAED,OAAO,MAAoB,CAAC;AAChC,CAAC;AAED,SAAS,aAAa,CAClB,GAAW,EACX,aAAwC;IAExC,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,OAAO,CAAC,CAAC,GAAG;QACnC,GAAG,GAAG,GAAG,CAAC,OAAO,CACb,IAAI,MAAM,CAAC,IAAI,GAAG,GAAG,GAAG,IAAI,EAAE,GAAG,CAAC,EAClC,aAAa,CAAC,GAAG,CAAC,CACrB,CAAC;KACL,CAAC,CAAC;IACH,OAAO,GAAG,CAAC;AACf,CAAC;SAOe,IAAI,CAChB,GAAa,EACb,OAAgB;;IAEhB,IAAI;QACA,MAAM,GAAG,sBAAsB,CAAC,GAAG,CAAC,CAAC;QAErC,IAAI,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC;QAE9B,MAAM,QAAQ,SAAG,MAAM,CAAC,MAAM,0CAAE,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC;QAElE,MAAM,WAAW,GACb,QAAQ;YACR,QAAQ,CAAC,CAAC,CAAC;YACX,QAAQ,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;YACvB,iBAAiB,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;QAC/C,IAAI,CAAC,OAAO,IAAI,WAAW;YAAE,OAAO,GAAG,WAAW,CAAC,IAAI,CAAC;QACxD,IAAI,OAAO,EAAE;YACT,IAAI,OAAO,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC;gBAChD,OAAO,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC,EAAE,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;YACvD,IAAI,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC;gBAAE,OAAO,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;SAC9D;QACD,MAAM,WAAW,GAAG,OAAO,IAAI,MAAM,CAAC,IAAI,IAAI,EAAE,CAAC;QAEjD,MAAM,OAAO,GAAG,MAAM,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC;QAC1C,IAAI,OAAO,EAAE;YACT,MAAM,QAAQ,GAAG,aAAa,CAAC,OAAO,CAAC,gBAAgB,EAAE;gBACrD,WAAW,EAAE,gBAAgB,CAAC,WAAW,CAAC;gBAC1C,OAAO,EAAE,gBAAgB,CAAC,WAAW,CAAC,OAAO,IAAI,EAAE,CAAC,CAAC;gBACrD,OAAO;aACV,CAAC,CAAC;YACH,OAAO,EAAE,OAAC,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,OAAO,mCAAI,YAAY,GAAG,QAAQ,EAAE,CAAC;SAC3D;KACJ;IAAC,OAAO,GAAG,EAAE;QACV,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;KACtB;IACD,OAAO,EAAE,CAAC;AACd;;;ACx0EA,MAAM,KAAK,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC;AAC/B,MAAM,MAAM,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC;AAKlC,MAAM,QAAQ,GAAG,SAAS,CAAC;AAC3B,MAAM,KAAK,GAAG,SAAS,CAAC;AACxB,MAAM,MAAM,GAAG,SAAS,CAAC;AACzB,MAAM,QAAQ,GAAG,SAAS,CAAC;AAM3B,IAAI,SAAS,GAAG,OAAC,OAAO,CAAC,MAAM,CAAC,KAAK,mCAAI,KAAK,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC;AAEzD,MAAM,QAAQ,GAAG;IACpB,QAAQ,EAAE,CAAC,IAAa;QACpB,SAAS,GAAG,IAAI,CAAC;KACpB;IACD,UAAU,EAAE,CAAC,CAAS;QAClB,OAAO,CAAC;aACH,OAAO,CAAC,WAAW,EAAE,CAAC,CAAC;YACpB,OAAO,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;SAC1C,CAAC;aACD,OAAO,CAAC,WAAW,EAAE,CAAC,CAAC;YACpB,OAAO,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;SAC9B,CAAC,CAAC;KACV;IACD,OAAO,EAAE,CAAC,CAAC,GAAG,EAAE;QACZ,KAAK,CAAC,KAAK,CAAC,OAAO,GAAG,CAAC,CAAC,CAAC;QACzB,OAAO,SAAS,GAAG,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,GAAG,CAAC,CAAC,GAAG,OAAO,GAAG,CAAC,CAAC;KAClE;IACD,KAAK,EAAE,CAAC,CAAC,GAAG,EAAE;QACV,OAAO,SAAS;cACV,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;cACxC,MAAM,GAAG,CAAC,CAAC;KACpB;IACD,OAAO,EAAE,CAAC,CAAC,GAAG,EAAE;QACZ,OAAO,SAAS;cACV,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC,CAAC;cAC5C,MAAM,GAAG,CAAC,CAAC;KACpB;IACD,IAAI,EAAE,CAAC,CAAC,GAAG,EAAE;QACT,OAAO,SAAS,GAAG,KAAK,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;KACtD;IACD,OAAO,EAAE,CAAC,CAAC,GAAG,EAAE;QACZ,OAAO,SAAS,GAAG,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;KACjD;IACD,MAAM,EAAE,CAAC,CAAC,GAAG,EAAE;QACX,OAAO,SAAS;cACV,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,GAAG,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;cAChD,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC;KACvB;IACD,GAAG,EAAE,CAAC,CAAC,GAAG,EAAE;QACR,OAAO,SAAS,GAAG,KAAK,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;KAC/C;IACD,IAAI,EAAE,CAAC,CAAC,GAAG,IAAI,IAAI,EAAE;QACjB,OAAO,SAAS;cACV,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,CAAC,kBAAkB,EAAE,GAAG,CAAC;cAClD,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC;KACvB;IACD,IAAI,EAAE,CAAC,CAAS;QACZ,OAAO,SAAS;cACV,QAAQ;gBACJ,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAC,CACf,iDAAiD;oBAC7C,CAAC;oBACD,KAAK,CACZ;cACL,uDAAuD;gBACnD,CAAC;gBACD,KAAK,CAAC;KACnB;CACJ;;AC3ED,MAAM,GAAG,GAAG,OAAO,CAAC,gBAAgB,CAAC,CAAC;AACtC,OAAO,CAAC,qBAAqB,CAAC,CAAC,GAAG,CAAC,CAAC;AAEpC,MAAM,cAAc,GAAG,OAAO,CAAC,iBAAiB,CAAC,CAAC;AAGlD,cAAc,CAAC,EAAE,GAAG,EAAE,uBAAuB,EAAE,IAAI,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC;AAEhE,MAAM,EAAE,eAAe,EAAE,GAAG,OAAO,CAAC,aAAa,CAAC,CAAC;AACnD,MAAM,YAAY,GAAG,eAAe,CAAC,MAAM,CAAC,CAAC;AAC7C,MAAMA,MAAI,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;AAC7B,MAAM,EAAE,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC;AAQ/B,SAAS,WAAW,CAAC,MAAc,EAAE,MAAc;IAC/C,IAAI,MAAM,KAAK,MAAM;QAAE,OAAO;IAC9B,IAAI,CAAC,MAAM;QAAE,OAAO;IACpB,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,CAAC,GAAG;QAC5B,IAAI,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,EAAE;YAC5B,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC;gBAAE,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC;YACnC,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,GAAG,CAAC,EAAE,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC;SAClD;aAAM,IAAI,OAAO,MAAM,CAAC,GAAG,CAAC,KAAK,QAAQ,EAAE;YAExC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC;gBAAE,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC;YACnC,WAAW,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC;SACzC;aAAM,IAAI,OAAO,MAAM,CAAC,GAAG,CAAC,KAAK,WAAW,EAAE;YAC3C,MAAM,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC;SAC7B;KACJ,CAAC,CAAC;AACP,CAAC;AAED,SAAS,YAAY,CACjB,MAAc,EACd,MAAkC;IAElC,EAAE,CAAC,KAAK,CAAC,MAAM,EAAE,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,CAAC;IACtC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;QAC1B,EAAE,CAAC,aAAa,CACZA,MAAI,CAAC,OAAO,CAACA,MAAI,CAAC,SAAS,CAACA,MAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC,CAAC,EAClD,MAAM,CAAC,CAAC,CAAC,CACZ,CAAC;KACL,CAAC,CAAC;AACP,CAAC;AAED,SAAS,KAAK,CAAC,IAAI;IACf,IAAI;QACA,IAAI,OAAO,GAAG;YACV,OAAO,EAAE,QAAQ;YACjB,OAAO,EAAE,KAAK;YACd,gBAAgB,EAAE;;;;;;;;;;;;;;;;;;;;;YAqBlB;SACH,CAAC;QAKF,IAAI,YAAY,GAAG,YAAY,CAAC,MAAM,EAAE,CAAC;QACzC,IAAI,CAAC,EAAC,YAAY,aAAZ,YAAY,uBAAZ,YAAY,CAAE,MAAM,CAAA,EAAE;YACxB,WAAW,CAAC,OAAO,EAAE,YAAY,CAAC,MAAM,CAAC,CAAC;SAC7C;QAKD,IAAI,IAAI,CAAC,QAAQ,CAAC,EAAE;YAChB,YAAY,GAAG,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;YACjD,IAAI,CAAC,EAAC,YAAY,aAAZ,YAAY,uBAAZ,YAAY,CAAE,MAAM,CAAA,EAAE;gBACxB,WAAW,CAAC,OAAO,EAAE,YAAY,CAAC,MAAM,CAAC,CAAC;aAC7C;SACJ;QAMD,WAAW,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;QAK3B,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,IAAI,CAAC,OAAO,CAAC,CAAC,MAAM,GAAG,CAAC,EAAE;YAC5C,OAAO,CAAC,KAAK,CACT,QAAQ,CAAC,KAAK,EAAE;gBACZ,6EAA6E;gBAC7E,WAAW,QAAQ,CAAC,OAAO,CACvB,IAAI,CAAC,EAAE,GAAG,OAAO,CACpB,2BAA2B,CACnC,CAAC;YACF,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;SACnB;QAED,YAAY,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,GAAG,EAAE,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,OAAO,CAAC,CAAC,CAAC;KACxE;IAAC,OAAO,GAAG,EAAE;QACV,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;KACtB;AACL,CAAC;AAED,SAAS,YAAY,CAAC,KAAK;IACvB,KAAK;SACA,UAAU,CAAC,QAAQ,EAAE;QAClB,QAAQ,EAAE,oDAAoD;QAC9D,IAAI,EAAE,MAAM;KACf,CAAC;SACD,SAAS,CAAC,MAAM,CAAC;SACjB,MAAM,CAAC,SAAS,EAAE;QACf,QAAQ,EAAE,iCAAiC;QAC3C,IAAI,EAAE,MAAM;KACf,CAAC;SACD,SAAS,CAAC,SAAS,CAAC;SACpB,MAAM,CAAC,QAAQ,EAAE;QACd,KAAK,EAAE,GAAG;QACV,QAAQ,EAAE,qBAAqB;QAC/B,IAAI,EAAE,MAAM;KACf,CAAC;SACD,SAAS,CAAC,QAAQ,CAAC;SACnB,MAAM,CAAC,QAAQ,EAAE;QACd,QAAQ,EAAE,4BAA4B;QACtC,IAAI,EAAE,MAAM;KACf,CAAC;SACD,SAAS,CAAC,QAAQ,CAAC;SACnB,MAAM,CAAC,SAAS,EAAE;QACf,QAAQ,EAAE,kDAAkD;QAC5D,IAAI,EAAE,SAAS;KAClB,CAAC;SACD,MAAM,CAAC,UAAU,EAAE;QAChB,QAAQ,EAAE,mCAAmC;QAC7C,IAAI,EAAE,SAAS;KAClB,CAAC;SACD,MAAM,CAAC,eAAe,EAAE;QACrB,KAAK,EAAE,GAAG;QACV,QAAQ,EAAE,kDAAkD;QAC5D,IAAI,EAAE,SAAS;KAClB,CAAC,CAAC;AACX,CAAC;AAED,OAAO,CAAC,OAAO,CAAC;KACX,KAAK,CAAC,6BAA6B,CAAC;KACpC,OAAO,CACJ,2CAA2C,EAC3C,uEAAuE,CAC1E;KACA,OAAO,CACJ,CAAC,aAAa,EAAE,iBAAiB,CAAC,EAClC,qBAAqB,EACrB,YAAY,EACZ,KAAK,CACR;KACA,OAAO,CACJ,MAAM,EACN,WAAW,EACX;IACI,OAAO;AACX,CAAC,EACD,CAAC,KAAK,KAAK,KAAK,CAAC,IAAI,EAAE,CAC1B;KAEA,IAAI,CAAC,GAAG,CAAC;KACT,KAAK,CAAC,GAAG,EAAE,MAAM,CAAC;KAClB,MAAM,CAAC,yDAAyD,CAAC;KACjE,MAAM,CAAC,IAAI,CAAC,CAAC,IAAI"}